{"version":3,"sources":["Pages/UserPages/LoginBoxed/index.js","Pages/UserPages/RegisterBoxed/index.js","Pages/UserPages/ForgotPasswordBoxed/index.js","Pages/UserPages/OnBoardEmail/index.js","Pages/UserPages/OnBoardOTPboxed/index.js","Pages/UserPages/OnBoardPersonal/index.js","Pages/UserPages/PersonalInformation/index.js","Pages/UserPages/VerifyCode/index.js","Pages/UserPages/ResetPassword/index.js","Pages/UserPages/ForgetPasswordEmail/index.js","Pages/UserPages/ForgetPasswordOTP/index.js","Pages/UserPages/ForgetPasswordNewPassword/index.js","Pages/UserPages/OnBoardPassword/index.js","Pages/UserPages/StepperForm/main.js","Pages/UserPages/index.js","assets/img/login-bg.jpg"],"names":["useStyles","makeStyles","theme","root","height","image","backgroundImage","concat","Art_Img","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","submit","title","flexGrow","fontFamily","cursor","alreadyVerified","justifyContent","textAlign","connect","state","dispatch","login","LOGIN_DATA","navigate","stopLoader","props","useSelector","_React$createElement","classes","_useState","useDispatch","useState","_useState2","Object","slicedToArray","stateLoader","setStateLoader","_useState3","email","password","_useState4","setState","_useState5","_useState6","stateIsEmailValid","setStateIsEmailValid","_useState7","_useState8","stateIsPasswordValid","setStateIsPasswordValid","_useState9","_useState10","setStateIsFormValid","_useState11","_useState12","_onChange","event","_event$target","target","name","value","prevState","objectSpread","defineProperty","onBlurHandler","_event$target2","fieldName","emailValid","utils","validateForm","passwordValid","validateField","react_default","a","createElement","Grid","container","component","className","CssBaseline","item","xs","sm","md","Paper","elevation","square","Typography","variant","Avatar","LockOutlined_default","noValidate","TextField","required","error","fullWidth","label","autoComplete","autoFocus","id","placeholder","helperText","emailError","onChange","onBlur","invalid","valid","passwordError","Button","color","onClick","e","preventDefault","FCMtoken","console","log","history","push","pathname","disabled","length","style","Spinner","Link","srt","Box","mt","RegisterBoxed","passwordrepState","setPasswordRepState","stateIsAdminNameValid","setStateIsVendorNameValid","_useState13","_useState14","stateIsPasswordrepValid","setStateIsPasswordrepValid","_useState15","_useState16","stateIsFormValid","useEffect","nameValid","passwordrepValid","setStateToEmpty","onSignUp","_ref","asyncToGenerator","RegisterBoxed_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","doSignup","stop","apply","this","arguments","_doSignup","_callee2","_context2","authActions","signup","sent","t0","react","Col","fontSize","fontWeight","Row","FormGroup","Input","FormFeedback","href","es_Button","size","Copyright","align","to","Date","getFullYear","marginBottom","ForgotPasswordBoxed","_onForgotPassword","ForgotPasswordBoxed_regeneratorRuntime","result","forgotPassword","response","data","responseMessage","message","Boolean","ForgotPasswordBoxed_Copyright","signUpDataEmail","emailData","payload","signupEmail","SIGNUPEMAIL_DATA","status","handleNext","auth","signupEmailData","signupOTP","SIGNUPOTP_DATA","OTPpin","stateIsOTPpinValid","setStateIsOTPpinValid","loggedemail","OTPpinError","OTPcode","overflowY","field","countryList","typography","body1","setProfileInformation","SIGNUP_PASSWORD_DATA","_React$createElement2","SchoolName","RegistrationNumber","OwnerName","OwnerContactNo","ContactNo","Street","Town","City","Slots","currentPackageName","setOwnerContactNo","setContactNo","_useState17","_useState18","defaultCountry","handleContactChange","info","lib_default","inputStyle","InputProps","phone","PERSONAL_INFORMATION_DATA","school","regNo","contact","ownerName","ownerContact","town","street","address","slots","createdAt","now","forceUpdate","bind","editing","setEditing","loading","setLoading","editSchool","schoolId","updateSchool","setEmail","setContact","owner","setOwner","setOwnerContact","_useState19","_useState20","setStreet","_useState21","_useState22","setTown","_useState23","_useState24","setAddress","Form","onSubmit","schoolData","toLowerCase","currentPackage","startsOn","endsOn","studentCount","Label","for","inputProps","country","axios","require","VerifyCodeBoxed","code","stateIsCodeValid","setStateIsCodeValid","token","_onVerifyCode","VerifyCode_regeneratorRuntime","config","headers","Authorization","post","process","codeValid","VerifyCode_Copyright","confirmPassword","match","setStateMatch","validation","setStateValid","_onSubmit","ResetPassword_regeneratorRuntime","abrupt","ResetPassword_Copyright","FORGETPASSWORD_EMAIL_DATA","forgetNewPassword","FORGET_NEW_PASSWORD_DATA","signupPassword","messaging","firebase","Notification","requestPermission","then","permission","getToken","button","marginRight","instructions","HorizontalLinearStepper","_React$useState","React","_React$useState2","activeStep","setActiveStep","_React$useState3","Set","_React$useState4","skipped","setSkipped","steps","isStepOptional","step","isStepSkipped","has","Stepper","map","index","OnBoardEmail","OnBoardOTPboxed","UserPages_OnBoardPersonal","UserPages_OnBoardPassword","getStepContent","newSkipped","values","delete","prevActiveStep","UserPages","react_router","path","url","LoginBoxed","VerifyCode","ResetPassword","OnboardEmailBoxed","OnBoardPersonal","OnBoardPassword","ForgetPasswordEmail","ForgetPasswordOTP","ForgetPasswordNewPassword","App","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/19.057fd2b6.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Spinner, FormFeedback } from \"reactstrap\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { connect, useDispatch } from \"react-redux\";\nimport * as utils from \"../../../common/utils\";\nimport { useSelector } from \"react-redux\";\n// import { authActions } from \"../../../store/actions\";\nimport Art_Img from \"../../../assets/img/login-bg.jpg\";\nimport { login } from \"../../../store/actions/authAction\";\nimport firebase from './../../../config/firebase'\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" to=\"\">\n        Lynx Admin\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n  },\n  image: {\n    backgroundImage: `url(${Art_Img})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.type === \"dark\"\n        ? theme.palette.grey[900]\n        : theme.palette.grey[50],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  title: {\n    flexGrow: 1,\n    fontFamily: \"Dancing Script\",\n    cursor: \"pointer\",\n  },\n  alreadyVerified: {\n    justifyContent: \"flex-end\",\n    // backgroundColor:'red',\n    textAlign: \"right\",\n  },\n}));\n\nfunction LoginBoxed(props) {\n  const user = useSelector((state) => state);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [stateLoader, setStateLoader] = useState(false);\n  const [state, setState] = useState({ email: \"\", password: \"\" });\n  const [stateIsEmailValid, setStateIsEmailValid] = useState(true);\n  const [stateIsPasswordValid, setStateIsPasswordValid] = useState(true);\n  const [stateIsFormValid, setStateIsFormValid] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const _onChange = (event) => {\n    const { name, value } = event.target;\n    setState((prevState) => ({ ...prevState, [name]: value }));\n  };\n\n  function onBlurHandler(event) {\n    const { name, value } = event.target;\n    validateField(name, value);\n  }\n\n  function onSignupPassword() {\n    props.history.push({\n      pathname: \"/pages/signup-email-boxed\",\n    });\n  }\n  function validateField(fieldName, value) {\n    switch (fieldName) {\n      case \"email\":\n        let emailValid = state.email === \"\" ? false : stateIsEmailValid;\n        emailValid = utils.isEmailValid(value);\n        setStateIsEmailValid(emailValid);\n        validateForm();\n        break;\n\n      case \"password\":\n        let passwordValid = utils.isPasswordValid(value);\n        setStateIsPasswordValid(passwordValid);\n        validateForm();\n        break;\n\n      default:\n        break;\n    }\n  }\n  function validateForm() {\n    let emailValid = false,\n      passwordValid = false;\n    emailValid = utils.isEmailValid(state.email);\n    passwordValid = utils.isPasswordValid(state.password);\n    setStateIsFormValid(emailValid && passwordValid);\n  }\n\n  function onClickForgotPassword() {\n    props.history.push({\n      pathname: \"/pages/forget-password-email\",\n    });\n  }\n  function onSignupPassword() {\n    props.history.push({\n      pathname: \"/pages/wizard\",\n    });\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // const messaging = firebase.messaging()\n\n    // Notification.requestPermission()\n    //   .then(permission => {\n    //     console.log(permission)\n    //     return messaging.getToken()\n    //   })\n    //   .then(token => {\n        const LOGIN_DATA = {\n          email: state.email,\n          password: state.password,\n          FCMtoken: \" \"\n        };\n\n        console.log(\"LOGIN_DATA\", LOGIN_DATA);\n\n        setStateLoader(true);\n        props.login(\n          LOGIN_DATA,\n          () => {\n            props.history.push({\n              pathname: \"/dashboards\",\n              // state: { email:state.email }\n            });\n          },\n          () => setStateLoader(false)\n        );\n      // })\n\n  };\n\n  const onLogin = async () => {\n    // console.log(\"LOGIN_DATA\", state)\n    // try {\n    //   setStateLoader(true);\n    //   const result = await dispatch(authActions.login(state));\n    //   props.history.push({\n    //     pathname: \"/dashboards\",\n    //   });\n    // } catch (error) {\n    //   if (error.response) {\n    //     utils._toast(error.response.data.responseMessage, \"error\");\n    //   } else {\n    //     utils._toast(\"Netwrok Error\", \"error\");\n    //   }\n    //   setStateLoader(false);\n    //   setState({ email: \"\", password: \"\" });\n    // }\n  };\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Typography variant=\"h5\" className={`${classes.title}`}>\n            <b>Lynx Admin</b>\n          </Typography>\n\n          <Typography variant=\"h5\"></Typography>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            LogIn\n          </Typography>\n          <form className={classes.form} noValidate>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              error={!stateIsEmailValid}\n              fullWidth\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              id=\"exampleEmail\"\n              placeholder=\"Email here...\"\n              value={state.email}\n              helperText={stateIsEmailValid ? \"\" : utils.Constants.emailError}\n              onChange={_onChange}\n              onBlur={onBlurHandler}\n              invalid={!stateIsEmailValid}\n              valid={state.email ? stateIsEmailValid : false}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              error={!stateIsPasswordValid}\n              label=\"Password\"\n              type=\"password\"\n              helperText={\n                stateIsPasswordValid ? \"\" : utils.Constants.passwordError\n              }\n              id=\"password\"\n              autoComplete=\"current-password\"\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password here...\"\n              value={state.password}\n              onChange={_onChange}\n              onBlur={onBlurHandler}\n              invalid={!stateIsPasswordValid}\n              valid={state.password ? stateIsPasswordValid : false}\n            />\n            <Button\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={handleSubmit}\n              disabled={stateLoader || !state.email || state.password.length <= 7}\n            >\n              {stateLoader ? (\n                <div style={{ width: \"130px\" }}>\n                  <Spinner\n                    style={{ width: \"20px\", height: \"20px\" }}\n                    color=\"light\"\n                  />\n                </div>\n              ) : (\n                \"Login to Dashboard\"\n              )}\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link\n                  style={{ cursor: \"pointer\" }}\n                  variant=\"body2\"\n                  onClick={onClickForgotPassword}\n                >\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item xs srt className={classes.alreadyVerified}>\n                <Link\n                  style={{ cursor: \"pointer\" }}\n                  variant=\"body2\"\n                  onClick={onSignupPassword}\n                >\n                  Don't have an account?\n                </Link>\n              </Grid>\n            </Grid>\n            <Box mt={5}>{/* <Copyright /> */}</Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\nconst mapStateToProps = (state) => {\n  return {\n    // open: state.layoutReducer.snackbarState,\n    // message: state.layoutReducer.snackbarMessage,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // toggleAuth: (data) => dispatch(toggleAuthActionCreator(data)),\n    // showAlert: (message) => dispatch(onSnackbar(message)),\n    login: (LOGIN_DATA, navigate, stopLoader) =>\n      dispatch(login(LOGIN_DATA, navigate, stopLoader)),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginBoxed);\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport {\n  Col,\n  Row,\n  Button,\n  FormGroup,\n  Input,\n  FormFeedback,\n  Spinner\n} from \"reactstrap\";\nimport { useDispatch } from \"react-redux\";\n\n//import css module\nimport \"react-flags-select/css/react-flags-select.css\";\n\n// import \"react-phone-input-2/dist/style.css\";\n\nimport { authActions } from \"../../../store/actions\";\nimport * as utils from \"../../../common/utils\";\n\nconst RegisterBoxed = props => {\n  const dispatch = useDispatch();\n  const [state, setState] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const [stateLoader, setStateLoader] = useState(false);\n  const [passwordrepState, setPasswordRepState] = useState(\"\");\n\n  const [stateIsEmailValid, setStateIsEmailValid] = useState(true);\n  const [stateIsAdminNameValid, setStateIsVendorNameValid] = useState(true);\n  const [stateIsPasswordValid, setStateIsPasswordValid] = useState(true);\n\n  const [stateIsPasswordrepValid, setStateIsPasswordrepValid] = useState(true);\n\n  const [stateIsFormValid, setStateIsFormValid] = useState(false);\n\n  const _onChange = event => {\n    const { name, value } = event.target;\n    setState(prevState => ({ ...prevState, [name]: value }));\n  };\n  useEffect(() => {\n    validateForm();\n  });\n\n\n  const _onChangePasswordRep = event => {\n    setPasswordRepState(event.target.value);\n  };\n\n  function onBlurHandler(event) {\n    const { name, value } = event.target;\n    validateField(name, value);\n  }\n\n  function onBlurPasswordRepeatHandler(event) {\n    validateField(\"passwordrep\", event.target.value);\n  }\n\n  function validateField(fieldName, value) {\n    switch (fieldName) {\n      case \"name\":\n        let nameValid = utils.isValueExist(value);\n        setStateIsVendorNameValid(nameValid);\n        validateForm();\n        break;\n\n      case \"email\":\n        let emailValid = state.email === \"\" ? false : stateIsEmailValid;\n        emailValid = utils.isEmailValid(value);\n        setStateIsEmailValid(emailValid);\n        validateForm();\n        break;\n\n      case \"password\":\n        let passwordValid = utils.isPasswordValid(value);\n        setStateIsPasswordValid(passwordValid);\n        validateForm();\n        break;\n\n      case \"passwordrep\":\n        let passwordrepValid = utils.isPasswordRepeatValid(\n          value,\n          state.password\n        );\n        setStateIsPasswordrepValid(passwordrepValid);\n        validateForm();\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  function validateForm() {\n    let nameValid = false,\n      emailValid = false,\n      passwordrepValid = false,\n      passwordValid = false;\n\n    nameValid = utils.isValueExist(state.name);\n    emailValid = utils.isEmailValid(state.email);\n    passwordValid = utils.isPasswordValid(state.password);\n    passwordrepValid = utils.isPasswordRepeatValid(\n      passwordrepState,\n      state.password\n    );\n    setStateIsFormValid(\n      nameValid &&\n      emailValid &&\n      passwordValid &&\n      passwordrepValid\n    );\n  }\n\n  function setStateToEmpty() {\n    setState(prevState => ({\n      ...prevState,\n      name: \"\",\n      email: \"\",\n      password: \"\"\n    }));\n    setPasswordRepState(\"\");\n  }\n\n  function onClickForgotPassword() {\n    props.history.push({\n      pathname: \"/dashboard/analytics\"\n    });\n  }\n\n  const onSignUp = async () => {\n    try {\n      setStateLoader(true);\n      doSignup()\n    } catch (error) {\n      setStateToEmpty();\n      setStateLoader(false);\n      utils._toast(\n        \"Somthing went Wrong! this account details already exits try another one\",\n        \"error\"\n      );\n    }\n  };\n\n  async function doSignup() {\n    try {\n      const signupResult = await dispatch(authActions.signup(state));\n      if (signupResult) {\n        setStateToEmpty();\n        setStateLoader(false);\n        props.history.push({\n          pathname: \"/dashboard/analytics\"\n        });\n      }\n    } catch (error) {\n      setStateLoader(false);\n      setStateToEmpty();\n      utils._toast(\n        \"Somthing went Wrong! this email details already exits try another one\",\n        \"error\"\n      );\n    }\n  }\n\n  return (\n    <Fragment>\n      <div className=\"bg-premium-dark\">\n        <div className=\"d-flex justify-content-center align-items-center\">\n          <Col md=\"8\" className=\"mx-auto app-login-box\">\n            <div\n              style={{\n                display: \"flex\",\n                marginTop: \"30px\",\n                justifyContent: \"center\"\n              }}\n            >\n              <p style={{ fontSize: \"40px\", fontWeight: \"bold\" }}>\n                African Art\n                </p>\n            </div>\n\n            <div className=\"modal-dialog w-100\">\n              <div className=\"modal-content\">\n                <div className=\"modal-body\">\n                  <div className=\"modal-title\">\n                    <h4 className=\"mt-2\">\n                      <div>Welcome,</div>\n                      <span>\n                        It only takes a{\" \"}\n                        <span className=\"text-success\">few seconds</span> to\n                        create your account\n                      </span>\n                    </h4>\n                  </div>\n                  <Row className=\"divider\" />\n                  <Row form>\n                    <Col md={12}>\n                      <FormGroup>\n                        <Input\n                          type=\"text\"\n                          name=\"name\"\n                          id=\"exampleName\"\n                          placeholder=\"Admin Name here...\"\n                          value={state.name}\n                          onBlur={onBlurHandler}\n                          onChange={_onChange}\n                          invalid={!stateIsAdminNameValid}\n                          valid={state.name ? stateIsAdminNameValid : false}\n                        />\n                        {!stateIsAdminNameValid && (\n                          <FormFeedback>\n                            Admin Name is required...\n                          </FormFeedback>\n                        )}\n                      </FormGroup>\n                      <FormGroup>\n                        <Input\n                          type=\"email\"\n                          name=\"email\"\n                          id=\"exampleEmail\"\n                          placeholder=\"Email here...\"\n                          value={state.email}\n                          onChange={_onChange}\n                          onBlur={onBlurHandler}\n                          invalid={!stateIsEmailValid}\n                          valid={state.email ? stateIsEmailValid : false}\n                        />\n                        {!stateIsEmailValid && (\n                          <FormFeedback>Invalid email address...</FormFeedback>\n                        )}\n                      </FormGroup>\n\n                      <FormGroup>\n                        <Input\n                          type=\"password\"\n                          name=\"password\"\n                          id=\"examplePassword\"\n                          placeholder=\"Password here...\"\n                          value={state.password}\n                          onBlur={onBlurHandler}\n                          onChange={_onChange}\n                          invalid={!stateIsPasswordValid}\n                          valid={state.password ? stateIsPasswordValid : false}\n                        />\n                        {!stateIsPasswordValid && (\n                          <FormFeedback>\n                            {utils.Constants.passwordError}\n                          </FormFeedback>\n                        )}\n                      </FormGroup>\n                      <FormGroup>\n                        <Input\n                          type=\"password\"\n                          name=\"passwordrep\"\n                          id=\"examplePasswordRep\"\n                          placeholder=\"Repeat Password here...\"\n                          value={passwordrepState}\n                          onBlur={onBlurPasswordRepeatHandler}\n                          onChange={_onChangePasswordRep}\n                          invalid={!stateIsPasswordrepValid}\n                          valid={\n                            passwordrepState ? stateIsPasswordrepValid : false\n                          }\n                        />\n                        {!stateIsPasswordrepValid && (\n                          <FormFeedback>\n                            Password and repeat password must be same...\n                          </FormFeedback>\n                        )}\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                  <Row className=\"divider\" />\n                  <h6 className=\"mb-0\">\n                    Already have an account?{\" \"}\n                    <a href=\"/#\" className=\"text-primary\">\n                      Sign in\n                    </a>{\" \"}\n                    |{\" \"}\n                    <span\n                      className=\"text-primary\"\n                      style={{ cursor: \"pointer\" }}\n                      onClick={onClickForgotPassword}\n                    >\n                      Forgot Password\n                    </span>\n                  </h6>\n                </div>\n                <div className=\"modal-footer d-block text-center\">\n                  <Button\n                    color=\"primary\"\n                    className=\"btn-wide btn-pill btn-shadow btn-hover-shine\"\n                    size=\"lg\"\n                    disabled={!stateIsFormValid}\n                    onClick={onSignUp}\n                  >\n                    {stateLoader ? (\n                      <div style={{ width: \"130px\" }}>\n                        <Spinner\n                          style={{ width: \"25px\", height: \"25px\" }}\n                          color=\"light\"\n                        />\n                      </div>\n                    ) : (\n                        \"Create Account\"\n                      )}\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </Col>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default RegisterBoxed;\n","import React, { useState } from \"react\";\nimport { Spinner, FormFeedback } from \"reactstrap\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch } from \"react-redux\";\nimport * as utils from \"../../../common/utils\";\nimport { authActions } from \"../../../store/actions\";\nimport Art_Img from \"../../../assets/img/login-bg.jpg\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" to=\"\">\n        Lynx Admin\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n  },\n  image: {\n    backgroundImage: `url(${Art_Img})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.type === \"dark\"\n        ? theme.palette.grey[900]\n        : theme.palette.grey[50],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(15, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  title: {\n    marginBottom: 40,\n    flexGrow: 1,\n    fontFamily: \"Dancing Script\",\n    cursor: \"pointer\",\n  },\n}));\n\nexport default function ForgotPasswordBoxed(props) {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const [state, setState] = useState({ email: \"\" });\n  const [stateIsEmailValid, setStateIsEmailValid] = useState(true);\n  const [stateIsFormValid, setStateIsFormValid] = useState(false);\n  const [stateLoader, setStateLoader] = useState(false);\n\n  function _onChange(event) {\n    const { value } = event.target;\n    setState({ email: value });\n  }\n  function _onBlur(event) {\n    const { value } = event.target;\n    let emailValid = utils.isEmailValid(value);\n    setStateIsEmailValid(Boolean(emailValid));\n    setStateIsFormValid(Boolean(emailValid));\n  }\n\n  function onSignIn() {\n    props.history.push({\n      pathname: \"/pages/login\",\n    });\n  }\n\n  async function onForgotPassword() {\n    try {\n      setStateLoader(true);\n      const result = await dispatch(authActions.forgotPassword(state));\n      setState({ email: \"\" });\n      //console.log(\"check results here\", result);\n      if (result) {\n        props.history.push({\n          pathname: \"/pages/verify-code\",\n          state: result,\n        });\n      }\n    } catch (error) {\n      if (error.response) {\n        utils._toast(error.response.data.responseMessage, \"error\");\n      } else {\n        // utils._toast(\"Netwrok Error\", \"error\");\n      }\n      setStateLoader(false);\n      utils._toast(error.message, \"error\");\n      setState({ email: \"\" });\n    }\n  }\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Typography variant=\"h5\" className={`${classes.title}`}>\n            <b>Lynx Admin Admin</b>\n          </Typography>\n          <Typography component=\"h1\" variant=\"h5\">\n            Forgot your Password?\n          </Typography>\n          <form className={classes.form} noValidate>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              error={!stateIsEmailValid}\n              fullWidth\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              id=\"exampleEmail\"\n              placeholder=\"Email here...\"\n              value={state.email}\n              helperText={stateIsEmailValid ? \"\" : utils.Constants.emailError}\n              onChange={_onChange}\n              onBlur={_onBlur}\n              invalid={!stateIsEmailValid}\n              valid={state.email ? stateIsEmailValid : false}\n            />\n            <Button\n              fullWidth\n              variant=\"contained\"\n              disabled={stateLoader}\n              color=\"primary\"\n              className={classes.submit}\n              onClick={onForgotPassword}\n            >\n              {stateLoader ? (\n                <div style={{ width: \"130px\" }}>\n                  <Spinner\n                    style={{ width: \"20px\", height: \"20px\" }}\n                    color=\"light\"\n                  />\n                </div>\n              ) : (\n                  \"Forget Password\"\n                )}\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link\n                  style={{ cursor: \"pointer\" }}\n                  variant=\"body2\"\n                  onClick={onSignIn}\n                >\n                  Sign in existing account\n                </Link>\n              </Grid>\n            </Grid>\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Spinner, FormFeedback } from \"reactstrap\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch } from \"react-redux\";\nimport * as utils from \"../../../common/utils\";\nimport { useSelector } from \"react-redux\";\nimport { authActions } from \"../../../store/actions\";\nimport Art_Img from \"../../../assets/img/login-bg.jpg\";\nimport { connect } from 'react-redux';\nimport { signupEmail } from \"../../../store/actions/authAction\";\n// function Copyright() {\n//   return (\n//     <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n//       {\"Copyright © \"}\n//       <Link color=\"inherit\" href=\"https://material-ui.com/\">\n//         AfricanArt.International\n//       </Link>{\" \"}\n//       {new Date().getFullYear()}\n//       {\".\"}\n//     </Typography>\n//   );\n// }\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"calc(100vh - 16px)\",\n    width:\"100%\",\n    // marginTop:\"75px\",\n    display:\"flex\",\n    alignItems:\"center\",\n    justifyContent: \"center\",\n    alignItems:\"center\"\n    // alignContent:\"center\",\n  },\n  image: {\n    backgroundImage: `url(${Art_Img})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.type === \"dark\"\n        ? theme.palette.grey[900]\n        : theme.palette.grey[50],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    // margin: theme.spacing(8, 4),\n    margin:\"15px 12px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n\n\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    marginBottom:\"-30px\",\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  title: {\n    flexGrow: 1,\n    fontFamily: \"Dancing Script\",\n    cursor: \"pointer\",\n  },\n}));\n\nfunction OnboardEmailBoxed(props) {\n\n  const user = useSelector((state) => state);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [stateLoader, setStateLoader] = useState(false);\n  const [state, setState] = useState({ email: \"\", password: \"\" });\n  const [stateIsEmailValid, setStateIsEmailValid] = useState(true);\n  const [stateIsPasswordValid, setStateIsPasswordValid] = useState(true);\n  const [stateIsFormValid, setStateIsFormValid] = useState(false);\n  const [loading, setLoading] = useState(false)\n  const _onChange = (event) => {\n    const { name, value } = event.target;\n    setState((prevState) => ({ ...prevState, [name]: value }));\n  };\n  function onBlurHandler(event) {\n    const { name, value } = event.target;\n    validateField(name, value);\n  }\n  console.log(\"ON BOARD \", props)\n  // function countryToFlag(isoCode) {\n  //   return typeof String.fromCodePoint !== \"undefined\"\n  //     ? isoCode\n  //         .toUpperCase()\n  //         .replace(/./g, (char) =>\n  //           String.fromCodePoint(char.charCodeAt(0) + 127397)\n  //         )\n  //     : isoCode;\n  // }\n\n  function validateField(fieldName, value) {\n    switch (fieldName) {\n      case \"email\":\n        let emailValid = state.email === \"\" ? false : stateIsEmailValid;\n        emailValid = utils.isEmailValid(value);\n        setStateIsEmailValid(emailValid);\n        validateForm();\n        break;\n\n      case \"password\":\n        let passwordValid = utils.isPasswordValid(value);\n        setStateIsPasswordValid(passwordValid);\n        validateForm();\n        break;\n\n      default:\n        break;\n    }\n  }\n  function validateForm() {\n    let emailValid = false,\n      passwordValid = false;\n    emailValid = utils.isEmailValid(state.email);\n    passwordValid = utils.isPasswordValid(state.password);\n    setStateIsFormValid(emailValid && passwordValid);\n  }\n  console.log(\"SIGNUP EMAIL\", state.email)\n  function onClickForgotPassword() {\n    props.history.push({\n      pathname: \"/pages/login\",\n\n    });\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setStateLoader(true);\n\n    const SIGNUPEMAIL_DATA = {\n      email:state.email,\n      status:\"Signup\"\n    //  password:state.password\n    };\nconsole.log(\"SIGNUP EMAIL\",SIGNUPEMAIL_DATA)\n    props.signUpDataEmail(SIGNUPEMAIL_DATA)\n\n    props.signupEmail(SIGNUPEMAIL_DATA, () => {\n      props.handleNext()\n      // props.history.push({\n      //   pathname: \"/pages/wizard\",\n      //   // state: { email:state.email }\n      // });\n    }, () => setStateLoader(false));\n  };\n\n  const onSignupEmail = async () => {\n\n    // console.log(\"SignupEmail_DATA\", state)\n\n    // props.history.push({\n    //   pathname: \"/pages/signup-OTP-boxed\",\n    //   state: { email:state.email }\n    // });\n    // try {\n    //   setStateLoader(true);\n    //   const result = await dispatch(authActions.signupEmail(state));\n\n    // } catch (error) {\n    //   if (error.response) {\n    //     utils._toast(error.response.data.responseMessage, \"error\");\n    //   } else {\n    //     utils._toast(\"Netwrok Error\", \"error\");\n    //   }\n    //   setStateLoader(false);\n    //   setState({ email: \"\" });\n    // }\n  };\n\n  return (\n    <div className={classes.root}>\n\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      {/* <Grid item xs={false} sm={4} md={7} className={classes.image} /> */}\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Typography variant=\"h5\" className={`${classes.title}`}>\n            <b>Lynx Admin</b>\n          </Typography>\n\n          <Typography variant=\"h5\"></Typography>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            SIGN UP\n          </Typography>\n          <form className={classes.form} noValidate>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              error={!stateIsEmailValid}\n              fullWidth\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              id=\"exampleEmail\"\n              placeholder=\"Email here...\"\n              value={state.email}\n              helperText={stateIsEmailValid ? \"\" : utils.Constants.emailError}\n              onChange={_onChange}\n              onBlur={onBlurHandler}\n              invalid={!stateIsEmailValid}\n              valid={state.email ? stateIsEmailValid : false}\n              />\n            {/* <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              error={!stateIsPasswordValid}\n              label=\"Password\"\n              type=\"password\"\n              helperText={\n                stateIsPasswordValid ? \"\" : utils.Constants.passwordError\n              }\n              id=\"password\"\n              autoComplete=\"current-password\"\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password here...\"\n              value={state.password}\n              onChange={_onChange}\n              onBlur={onBlurHandler}\n              invalid={!stateIsPasswordValid}\n              valid={state.password ? stateIsPasswordValid : false}\n            /> */}\n            {/* <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              error={!stateIsPasswordValid}\n              label=\"Password\"\n              type=\"password\"\n              helperText={\n                stateIsPasswordValid ? \"\" : utils.Constants.passwordError\n              }\n              id=\"password\"\n              autoComplete=\"current-password\"\n              type=\"password\"\n              name=\"Confirm password\"\n              placeholder=\"Confirm Password here...\"\n              value={state.password}\n              onChange={_onChange}\n              onBlur={onBlurHandler}\n              invalid={!stateIsPasswordValid}\n              valid={state.password ? stateIsPasswordValid : false}\n            /> */}\n            <Button\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={stateLoader || !state.email}\n              className={classes.submit}\n              onClick={handleSubmit}\n              >\n              {stateLoader ? (\n                <div style={{ width: \"130px\" }}>\n                  <Spinner\n                    style={{ width: \"20px\", height: \"20px\" }}\n                    color=\"light\"\n                    />\n                </div>\n              ) : (\n                \"Verify\"\n                )}\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link\n                  style={{ cursor: \"pointer\" }}\n                  variant=\"body2\"\n                  onClick={onClickForgotPassword}\n                >\n                  Already Verified?\n                </Link>\n              </Grid>\n            </Grid>\n            <Box mt={5}>\n              {/* <Copyright /> */}\n            </Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n</div>\n  );\n}\nconst mapStateToProps = (state) => {\n  return {\n    // open: state.layoutReducer.snackbarState,\n    // message: state.layoutReducer.snackbarMessage,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // toggleAuth: (data) => dispatch(toggleAuthActionCreator(data)),\n    // showAlert: (message) => dispatch(onSnackbar(message)),\n    signUpDataEmail: (emailData) => dispatch({ type: \"SIGNUPEMAILDATA\", payload: emailData }),\n    signupEmail: (SIGNUPEMAIL_DATA, navigate, stopLoader) => dispatch(signupEmail(SIGNUPEMAIL_DATA, navigate, stopLoader))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OnboardEmailBoxed);\n","import React, { useState } from \"react\";\nimport { Spinner, FormFeedback } from \"reactstrap\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { connect, useDispatch } from \"react-redux\";\nimport * as utils from \"../../../common/utils\";\nimport { useSelector } from \"react-redux\";\nimport { authActions } from \"../../../store/actions\";\nimport Art_Img from \"../../../assets/img/login-bg.jpg\";\nimport { signupOTP } from \"../../../store/actions/authAction\";\n\n// import SignupEmailBoxed from \"../SignUpEmail\";\n\n// function Copyright() {\n//   return (\n//     <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n//       {\"Copyright © \"}\n//       <Link color=\"inherit\" href=\"https://material-ui.com/\">\n//         AfricanArt.International\n//       </Link>{\" \"}\n//       {new Date().getFullYear()}\n//       {\".\"}\n//     </Typography>\n//   );\n// }\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"calc(100vh - 16px)\",\n    width:\"100%\",\n    // marginTop:\"75px\",\n    display:\"flex\",\n    alignItems:\"center\",\n    justifyContent: \"center\",\n    alignItems:\"center\"\n  },\n  image: {\n    backgroundImage: `url(${Art_Img})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.type === \"dark\"\n        ? theme.palette.grey[900]\n        : theme.palette.grey[50],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    // margin: theme.spacing(8, 4),\n    margin:\"15px 12px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginBottom:\"10px\",\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  title: {\n    flexGrow: 1,\n    fontFamily: \"Dancing Script\",\n    cursor: \"pointer\",\n  },\n}));\n function OnboardOTPBoxed(props) {\n  const user = useSelector((state) => state);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [stateLoader, setStateLoader] = useState(false);\n  const [state, setState] = useState({OTPpin: \"\" });\n  // const [stateIsEmailValid, setStateIsEmailValid] = useState(true);\n  const [stateIsOTPpinValid, setStateIsOTPpinValid] = useState(true);\n  const [stateIsFormValid, setStateIsFormValid] = useState(false);\n  const [loading, setLoading] = useState(false)\n  console.log(\"SIGN UP OTPP PROPS\",props.signupEmail.email)\n  const loggedemail=props.signupEmail.email\n\n  const _onChange = (event) => {\n    const { name, value } = event.target;\n    console.log(\"CONSOLE\",name,value)\n    setState((prevState) => ({ ...prevState, [name]: value }));\n  };\n\n  function onBlurHandler(event) {\n    const { name, value } = event.target;\n    validateField(name, value);\n  }\n\n  // function countryToFlag(isoCode) {\n  //   return typeof String.fromCodePoint !== \"undefined\"\n  //     ? isoCode\n  //         .toUpperCase()\n  //         .replace(/./g, (char) =>\n  //           String.fromCodePoint(char.charCodeAt(0) + 127397)\n  //         )\n  //     : isoCode;\n  // }\n\n  function validateField(fieldName, value) {\n    switch (fieldName) {\n      // case \"email\":\n      //   let emailValid = state.email === \"\" ? false : stateIsEmailValid;\n      //   emailValid = utils.isEmailValid(value);\n      //   setStateIsEmailValid(emailValid);\n      //   validateForm();\n      //   break;\n\n      case \"OTPpin\":\n        let passwordValid = utils.isOTPpinValid(value);\n        setStateIsOTPpinValid(passwordValid);\n        validateForm();\n        break;\n\n      default:\n        break;\n    }\n  }\n  function validateForm() {\n    let emailValid = false,\n      OTPpin = false;\n    // emailValid = utils.isEmailValid(state.email);\n    OTPpin = utils.isOTPpinValid(state.OTPpin);\n    setStateIsFormValid(OTPpin);\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setStateLoader(true);\n\n    const SIGNUPOTP_DATA = {\n     email:loggedemail,\n     OTPcode:state.OTPpin\n    };\n    \n    console.log(\"SIGN UP OTP INDEX\",SIGNUPOTP_DATA)\n\n    props.signupOTP(SIGNUPOTP_DATA, () => {\n      props.handleNext()\n      // props.history.push({\n      //   pathname: \"/pages/onboard-password-boxed\",\n      //   // state: { email:loggedemail }\n      // });\n    }, () => setStateLoader(false));\n  };\n\n\n  const signupOTP = async () => {\n  \n    // console.log(\"SIGNUP_OTP_DATA\", state)\n    // props.history.push({\n    //       pathname: \"/pages/signup-password-boxed\",\n    //     });\n    // try {\n    //   setStateLoader(true);\n    //   const result = await dispatch(authActions.signupOTP(state));\n    //   props.history.push({\n    //     pathname: \"/dashboards\",\n    //   });\n    // } catch (error) {\n    //   if (error.response) {\n    //     utils._toast(error.response.data.responseMessage, \"error\");\n    //   } else {\n    //     utils._toast(\"Netwrok Error\", \"error\");\n    //   }\n    //   setStateLoader(false);\n    //   setState({OTPpin: \"\" });\n    // }\n  };\n\n  return (\n    <div className={classes.root}>\n\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      {/* <Grid item xs={false} sm={4} md={7} className={classes.image} /> */}\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Typography variant=\"h5\" className={`${classes.title}`}>\n            <b>Lynx Admin</b>\n          </Typography>\n\n          <Typography variant=\"h5\"></Typography>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            SIGN UP OTP\n          </Typography>\n          <form className={classes.form} noValidate>\n            {/* <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              error={!stateIsEmailValid}\n              fullWidth\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              id=\"exampleEmail\"\n              placeholder=\"Email here...\"\n              value={state.email}\n              helperText={stateIsEmailValid ? \"\" : utils.Constants.emailError}\n              onChange={_onChange}\n              onBlur={onBlurHandler}\n              invalid={!stateIsEmailValid}\n              valid={state.email ? stateIsEmailValid : false}\n            /> */}\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              error={!stateIsOTPpinValid}\n              label=\"OTP Code\"\n              type=\"text\"\n              helperText={\n                stateIsOTPpinValid ? \"\" : utils.Constants.OTPpinError\n              }\n              id=\"password\"\n              autoComplete=\"current-password\"\n              type=\"text\"\n              name=\"OTPpin\"\n              placeholder=\"Enter 6 digits OTP\"\n              value={state.OTPpin}\n              onChange={_onChange}\n              onBlur={onBlurHandler}\n              invalid={!stateIsOTPpinValid}\n              valid={state.OTPpin ? stateIsOTPpinValid : false}\n              />\n\n            <Button\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={handleSubmit}\n              disabled={stateLoader || state.OTPpin.length !==6}\n              >\n              {stateLoader ? (\n                <div style={{ width: \"130px\" }}>\n                  <Spinner\n                    style={{ width: \"20px\", height: \"20px\" }}\n                    color=\"light\"\n                    />\n                </div>\n              ) : (\n                \"Confirm\"\n                )}\n            </Button>\n            {/* <Grid container>\n              <Grid item xs>\n              <Link\n              style={{ cursor: \"pointer\" }}\n              variant=\"body2\"\n              onClick={onClickForgotPassword}\n              >\n              Forgot password?\n              </Link>\n              </Grid>\n              <Grid item xs>\n              <Link\n              style={{ cursor: \"pointer\" }}\n              variant=\"body2\"\n              onClick={onSignupPassword}\n                >\n                Already Verified?\n                </Link>\n                </Grid>\n              </Grid> */}\n            {/* <Box mt={5}>\n              <Copyright />\n            </Box> */}\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n</div>\n  );\n}\nconst mapStateToProps = (state) => {\n  console.log(\"SIGN UP OTP STATE\",state)\n  return {\n    signupEmail:state.auth.signupEmailData\n    // open: state.layoutReducer.snackbarState,\n    // message: state.layoutReducer.snackbarMessage,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // toggleAuth: (data) => dispatch(toggleAuthActionCreator(data)),\n    // showAlert: (message) => dispatch(onSnackbar(message)),\n    signupOTP: (SIGNUPOTP_DATA,navigate,stopLoader) => dispatch(signupOTP(SIGNUPOTP_DATA,navigate,stopLoader))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OnboardOTPBoxed);\n","import React, { useState } from \"react\";\nimport { Spinner, FormGroup, FormFeedback, Col, Row, Label, } from \"reactstrap\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\n// import InputAdornment from '@material-ui/core/InputAdornment';\n// import SchoolIcon from '@material-ui/icons/School';\n// import CreateIcon from '@material-ui/icons/Create';\n// import PersonIcon from '@material-ui/icons/Person';\n// import ContactPhoneIcon from '@material-ui/icons/ContactPhone';\n// import LocationCityIcon from '@material-ui/icons/LocationCity';\n// import HomeIcon from '@material-ui/icons/Home';\n// import PhoneInput from 'react-phone-input-2'\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { connect, useDispatch } from \"react-redux\";\nimport * as utils from \"../../../common/utils\";\nimport { useSelector } from \"react-redux\";\nimport { authActions } from \"../../../store/actions\";\nimport Art_Img from \"../../../assets/img/login-bg.jpg\";\nimport { setProfileInformation } from \"../../../store/actions/authAction\"\n// import ReactPhoneInput from 'react-phone-input-material-ui';\nimport PhoneInput from 'react-phone-input-2'\nimport 'react-phone-input-2/lib/material.css'\n\n// import SignupEmailBoxed from \"../SignUpEmail\";\n\n// function Copyright() {\n//   return (\n//     <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n//       {\"Copyright © \"}\n//       <Link color=\"inherit\" href=\"https://material-ui.com/\">\n//         AfricanArt.International\n//       </Link>{\" \"}\n//       {new Date().getFullYear()}\n//       {\".\"}\n//     </Typography>\n//   );\n// }\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: \"100vh\",\n        width: \"100%\",\n        overflowY: \"auto\",\n        // marginTop:\"75px\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    image: {\n        backgroundImage: `url(${Art_Img})`,\n        backgroundRepeat: \"no-repeat\",\n        backgroundColor:\n            theme.palette.type === \"dark\"\n                ? theme.palette.grey[900]\n                : theme.palette.grey[50],\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n    },\n    paper: {\n        // margin: theme.spacing(8, 4),\n        margin: \"15px 12px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginBottom: \"-30px\",\n\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    title: {\n        flexGrow: 1,\n        fontFamily: \"Dancing Script\",\n        cursor: \"pointer\",\n    },\n    margin: {\n        margin: \"16px 31px\",\n        // width:\"39%\"\n    },\n    field: {\n        margin: '10px 0',\n        // border:\"20px solid black\"\n    },\n    countryList: {\n        ...theme.typography.body1,\n    },\n}));\n\nfunction OnBoardPersonal(props) {\n    const user = useSelector((state) => state);\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const [stateLoader, setStateLoader] = useState(false);\n    // const [state, setState] = useState({ password: \"\" });\n    const [state, setState] = useState({\n        SchoolName: \"\", RegistrationNumber: \"\",\n        OwnerName: \"\", OwnerContactNo: \"\", ContactNo: \"\", Street: \"\", Town: \"\", City: \"\", Slots: 0,\n        currentPackageName: \"Basic\"\n    });\n    const [OwnerContactNo, setOwnerContactNo] = useState({\n        value: \"\",\n    });\n    const [ContactNo, setContactNo] = useState({\n        value: \"\",\n    });\n    const [error, setError] = useState({})\n    const [stateIsEmailValid, setStateIsEmailValid] = useState(true);\n    const [stateIsPasswordValid, setStateIsPasswordValid] = useState(true);\n    const [stateIsFormValid, setStateIsFormValid] = useState(false);\n    const [loading, setLoading] = useState(false)\n    const loggedemail = props.signupEmail.email\n    console.log(\"SET PERSONAL INFO PROPS\", loggedemail)\n    const { value, defaultCountry } = props;\n\n    const _onChange = (event) => {\n        const { name, value } = event.target;\n        setState((prevState) => ({ ...prevState, [name]: value }));\n    };\n\n    function onBlurHandler(event) {\n        const { name, value } = event.target;\n        validateField(name, value);\n    }\n\n    function countryToFlag(isoCode) {\n        return typeof String.fromCodePoint !== \"undefined\"\n            ? isoCode\n                .toUpperCase()\n                .replace(/./g, (char) =>\n                    String.fromCodePoint(char.charCodeAt(0) + 127397)\n                )\n            : isoCode;\n    }\n    const handleContactChange = (e, info) => {\n        if (info === 'owner') {\n\n            // e.preventDefault();\n            setOwnerContactNo({\n                ...OwnerContactNo,\n                value: e,\n            });\n        } else {\n\n            setContactNo({\n                ...ContactNo,\n                value: e,\n            });\n        }\n    };\n\n    function validateField(fieldName, value) {\n        switch (fieldName) {\n            // case \"email\":\n            //   let emailValid = state.email === \"\" ? false : stateIsEmailValid;\n            //   emailValid = utils.isEmailValid(value);\n            //   setStateIsEmailValid(emailValid);\n            //   validateForm();\n            //   break;\n\n            case \"password\":\n                let passwordValid = utils.isPasswordValid(value);\n                setStateIsPasswordValid(passwordValid);\n                validateForm();\n                break;\n\n            default:\n                break;\n        }\n    }\n    function validateForm() {\n        let emailValid = false,\n            passwordValid = false;\n        // emailValid = utils.isEmailValid(state.email);\n        passwordValid = utils.isPasswordValid(state.password);\n        setStateIsFormValid(passwordValid);\n    }\n\n    // function onClickForgotPassword() {\n    //   props.history.push({\n    //     pathname: \"/pages/forgot-password-boxed\",\n    //   });\n    // }\n    // function onSignupPassword() {\n    //   props.history.push({\n    //     pathname: \"/pages/signup-email-boxed\",\n    //   });\n    // }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        setStateLoader(true);\n        // const date = new Date();\n\n        const PERSONAL_INFORMATION_DATA = {\n\n            email: loggedemail,\n            school: {\n                regNo: state.RegistrationNumber,\n                name: state.SchoolName,\n                contact: ContactNo.value,\n                ownerName: state.OwnerName,\n                ownerContact: OwnerContactNo.value,\n                town: state.Town,\n                street: state.Street,\n                address: state.City,\n                slots: state.Slots,\n                currentPackageName: state.currentPackageName,\n                createdAt: Date.now()\n            }\n\n        };\n\n        console.log(\"PERSONAL INFORMATION INDEX\", PERSONAL_INFORMATION_DATA)\n\n        props.setProfileInformation(PERSONAL_INFORMATION_DATA, () => {\n            props.handleNext()\n            // props.history.push({\n            //     pathname: \"/pages/login\",\n            // });\n        }, () => setStateLoader(false));\n    };\n\n    const onLogin = async () => {\n\n        // console.log(\"SIGNUP_PASSWORD_DATA\", state)\n        // try {\n        //   setStateLoader(true);\n        //   const result = await dispatch(authActions.signupPassword(state));\n        //   props.history.push({\n        //     pathname: \"/dashboards\",\n        //   });\n        // } catch (error) {\n        //   if (error.response) {\n        //     utils._toast(error.response.data.responseMessage, \"error\");\n        //   } else {\n        //     utils._toast(\"Netwrok Error\", \"error\");\n        //   }\n        //   setStateLoader(false);\n        //   setState({ password: \"\" });\n        // }\n    };\n\n    return (\n        <div style={{ justifyContent: \"center\" }}>\n\n            <Grid container component=\"main\" className={classes.root}>\n                <CssBaseline />\n                {/* <Grid item xs={false} sm={4} md={7} className={classes.image} /> */}\n                <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n                    <div className={classes.paper}>\n                        <Typography variant=\"h5\" className={`${classes.title}`}>\n                            <b>Lynx Admin</b>\n                        </Typography>\n\n                        <Typography variant=\"h5\"></Typography>\n                        <Avatar className={classes.avatar}>\n                            <LockOutlinedIcon />\n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            PROFILE INFORMATION\n                        </Typography>\n                        <Grid>\n\n                            <form className={classes.form} noValidate>\n                                <Row>\n\n                                    <Col style={{ margin: 10 }}>\n                                        {/* <div> */}\n\n\n                                        <TextField\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            fullWidth\n                                            required\n                                            onChange={_onChange}\n                                            name=\"SchoolName\"\n                                            id=\"SchoolName\"\n                                            // className={classes.margin}\n                                            id=\"input-with-icon-textfield\"\n                                            label=\"School Name\"\n                                        // InputProps={{\n                                        //     startAdornment: (\n                                        //         <InputAdornment position=\"start\">\n                                        //             <SchoolIcon />\n                                        //         </InputAdornment>\n                                        //     ),\n                                        // }}\n                                        />\n\n                                        <TextField\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            fullWidth\n                                            required\n                                            onChange={_onChange}\n                                            name=\"RegistrationNumber\"\n                                            margin=\"normal\"\n                                            // className={classes.margin}\n                                            id=\"input-with-icon-textfield\"\n                                            label=\"Registration Number\"\n                                        // InputProps={{\n                                        //     startAdornment: (\n                                        //         <InputAdornment position=\"start\">\n                                        //             <CreateIcon />\n                                        //         </InputAdornment>\n                                        //     ),\n                                        // }}\n                                        />\n                                        <TextField\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            fullWidth\n                                            required\n                                            onChange={_onChange}\n                                            name=\"OwnerName\"\n                                            // className={classes.margin}\n                                            id=\"input-with-icon-textfield\"\n                                            label=\"Owner Name\"\n                                        // InputProps={{\n                                        //     startAdornment: (\n                                        //         <InputAdornment position=\"start\">\n                                        //             <PersonIcon />\n                                        //         </InputAdornment>\n                                        //     ),\n                                        // }}\n                                        />\n\n\n                                        <PhoneInput\n                                            // margin=\"normal\"\n                                            // variant=\"outlined\"\n                                            // containerStyle={{backgroundColor:\"red\"}}\n                                            fullWidth\n                                            inputStyle={{ width: \"100%\", height: 56, margin: \"16px 0px 10px 0px\" }}\n                                            InputProps={{\n                                                name: \"OwnerContactNo\",\n                                                required: true\n                                            }}\n                                            id=\"OwnerContactNo\"\n                                            placeholder=\"Enter Owner Contact Number\"\n                                            // country={\"om\"}\n                                            // value={\"92\"}\n                                            onChange={phone => handleContactChange(phone, 'owner')}\n                                            required\n                                        />\n                                        {/* <FormFeedback>Contact cannot be empty</FormFeedback>\n                                            </FormGroup> */}\n\n                                        {/* </div> */}\n                                    </Col>\n                                    <Col style={{ margin: 10 }}>\n                                        {/* <div> */}\n\n                                        {/* <TextField\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            fullWidth\n                                            required\n                                            onChange={_onChange}\n                                            name=\"ContactNo\"\n                                            // className={classes.margin}\n                                            id=\"input-with-icon-textfield\"\n                                            label=\"Contact Number\"\n                               \n                                        /> */}\n                                        {/* <ReactPhoneInput\n                                        //   containerStyle=\"outlined\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            value={value}\n                                            defaultcountry={\"om\"}\n                                            // onChange={onChange}\n                                            inputClass={classes.field}\n                                            dropdownClass={classes.countryList}\n                                            component={TextField}\n                                        /> */}\n                                        <PhoneInput\n                                            // margin=\"normal\"\n                                            // variant=\"outlined\"\n                                            // containerStyle={{backgroundColor:\"red\"}}\n                                            fullWidth\n                                            inputStyle={{ width: \"100%\", height: 56, margin: \"15px 0px 7px 0px\" }}\n\n                                            // style={{width:120}}\n                                            InputProps={{\n                                                name: \"ContactNo\",\n                                                required: true\n                                            }}\n                                            id=\"ContactNo\"\n                                            // country={\"om\"}\n                                            placeholder=\"Enter Contact Number\"\n                                            // value={\"92\"}\n                                            onChange={phone => handleContactChange(phone)}\n                                            required\n                                        />\n\n                                        <TextField\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            fullWidth\n                                            required\n                                            onChange={_onChange}\n                                            // className={classes.margin}\n                                            name=\"Street\"\n                                            id=\"input-with-icon-textfield\"\n                                            label=\"Street\"\n                                        // InputProps={{\n                                        //     startAdornment: (\n                                        //         <InputAdornment position=\"start\">\n                                        //             <HomeIcon />\n                                        //         </InputAdornment>\n                                        //     ),\n                                        // }}\n                                        />\n                                        <TextField\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            fullWidth\n                                            required\n                                            onChange={_onChange}\n                                            // className={classes.margin}\n                                            name=\"Town\"\n                                            id=\"input-with-icon-textfield\"\n                                            label=\"Town\"\n                                        // InputProps={{\n                                        //     startAdornment: (\n                                        //         <InputAdornment position=\"start\">\n                                        //             <HomeIcon />\n                                        //         </InputAdornment>\n                                        //     ),\n                                        // }}\n                                        />     <TextField\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            fullWidth\n                                            required\n                                            onChange={_onChange}\n                                            name=\"City\"\n                                            // className={classes.margin}\n                                            id=\"input-with-icon-textfield\"\n                                            label=\"City\"\n                                        // InputProps={{\n                                        //     startAdornment: (\n                                        //         <InputAdornment position=\"start\">\n                                        //             <LocationCityIcon />\n                                        //         </InputAdornment>\n                                        //     ),\n                                        // }}\n                                        />\n                                        {/* </div> */}\n                                    </Col>\n                                </Row>\n\n                                <Button\n                                    type=\"submit\"\n                                    fullWidth\n                                    disabled={\n                                        !state.SchoolName || !state.RegistrationNumber ||\n                                        !state.OwnerName ||\n                                        OwnerContactNo.value.length <= 7\n                                        || ContactNo.value.length <= 7\n                                        // !state.Street || !state.Town || !state.City || !stateLoader\n                                    }\n                                    variant=\"contained\"\n\n                                    color=\"primary\"\n                                    className={classes.submit}\n                                    onClick={handleSubmit}\n                                >\n                                    {stateLoader ? (\n                                        <div style={{ width: \"130px\" }}>\n                                            <Spinner\n                                                style={{ width: \"20px\", height: \"20px\" }}\n                                                color=\"light\"\n                                            />\n                                        </div>\n                                    ) : (\n                                        \"CONTINUE\"\n                                    )}\n                                </Button>\n                                {/* <Grid container>\n              <Grid item xs>\n              <Link\n              style={{ cursor: \"pointer\" }}\n              variant=\"body2\"\n              onClick={onClickForgotPassword}\n              >\n              Forgot password?\n              </Link>\n              </Grid>\n              <Grid item xs>\n              <Link\n              style={{ cursor: \"pointer\" }}\n              variant=\"body2\"\n              onClick={onSignupPassword}\n              >\n              Already Verified?\n              </Link>\n              </Grid>\n            </Grid> */}\n                                <Box mt={5}>\n                                    {/* <Copyright /> */}\n                                </Box>\n                            </form>\n                        </Grid>\n                    </div>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\nconst mapStateToProps = (state) => {\n    console.log(\"PEROSANL INFO STATE\", state)\n    return {\n        signupEmail: state.auth.signupEmailData\n        // open: state.layoutReducer.snackbarState,\n        // message: state.layoutReducer.snackbarMessage,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        // toggleAuth: (data) => dispatch(toggleAuthActionCreator(data)),\n        // showAlert: (message) => dispatch(onSnackbar(message)),\n\n        setProfileInformation: (SIGNUP_PASSWORD_DATA, navigate, stopLoader) => dispatch(setProfileInformation(SIGNUP_PASSWORD_DATA, navigate, stopLoader))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OnBoardPersonal);\n","import React, { useEffect, useState } from \"react\";\n// import React from \"react\";\nimport {\n  Row,\n  Col,\n  Card,\n  CardBody,\n  UncontrolledButtonDropdown,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  Button,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n} from \"reactstrap\";\n// import Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch } from \"react-redux\";\nimport * as utils from \"../../../common/utils\";\nimport { useSelector } from \"react-redux\";\nimport { authActions } from \"../../../store/actions\";\nimport Art_Img from \"../../../assets/img/login-bg.jpg\";\nimport { connect } from 'react-redux';\nimport { signupEmail } from \"../../../store/actions/authAction\";\nimport PhoneInput from 'react-phone-input-2'\n\n// function Copyright() {\n//   return (\n//     <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n//       {\"Copyright © \"}\n//       <Link color=\"inherit\" href=\"https://material-ui.com/\">\n//         AfricanArt.International\n//       </Link>{\" \"}\n//       {new Date().getFullYear()}\n//       {\".\"}\n//     </Typography>\n//   );\n// }\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n  },\n  image: {\n    backgroundImage: `url(${Art_Img})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.type === \"dark\"\n        ? theme.palette.grey[900]\n        : theme.palette.grey[50],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  title: {\n    flexGrow: 1,\n    fontFamily: \"Dancing Script\",\n    cursor: \"pointer\",\n  },\n}));\n\nfunction PersonalInformation(props) {\n  const classes = useStyles();\n\n  const forceUpdate = useState()[1].bind(null, {})\n\n  const [editing, setEditing] = useState(false);\n\n  const [loading, setLoading] = useState(false);\n\n  const { editSchool, schoolId, school, updateSchool } = props;\n\n  const [name, setName] = useState({\n    value: school.name,\n  });\n  const [regNo, setRegNo] = useState({\n    value: school.regNo,\n  });\n  const [email, setEmail] = useState({\n    value: school.email,\n  });\n  const [password, setPassword] = useState({\n    value: \"*********\",\n  });\n  const [contact, setContact] = useState({\n    value: school.contact,\n  });\n  const [owner, setOwner] = useState({\n    value: school.ownerName,\n  });\n  const [ownerContact, setOwnerContact] = useState({\n    value: school.ownerContact,\n  });\n  const [street, setStreet] = useState({\n    value: school.street,\n  });\n  const [town, setTown] = useState({\n    value: school.town,\n  });\n  const [address, setAddress] = useState({\n    value: school.address,\n  });\n\n  useEffect(() => {\n    console.log(\"school\", school)\n  }, [school])\n\n  const handleEmailChange = (e) => {\n    e.preventDefault();\n    setEmail({\n      ...email,\n      value: e.target.value,\n    });\n  };\n  const handleContactChange = (e) => {\n    // e.preventDefault();\n    setContact({\n      ...contact,\n      value: e,\n    });\n  };\n  const handleOwnerChange = (e) => {\n    e.preventDefault();\n    setOwner({\n      ...owner,\n      value: e.target.value,\n    });\n  };\n  const handleOwnerContactChange = (e) => {\n    // e.preventDefault();\n    setOwnerContact({\n      ...ownerContact,\n      value: e,\n    });\n  };\n  const handleStreetChange = (e) => {\n    e.preventDefault();\n    setStreet({\n      ...street,\n      value: e.target.value,\n    });\n  };\n  const handleTownChange = (e) => {\n    e.preventDefault();\n    setTown({\n      ...town,\n      value: e.target.value,\n    });\n  };\n  const handleAddressChange = (e) => {\n    e.preventDefault();\n    setAddress({\n      ...address,\n      value: e.target.value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    setLoading(true)\n\n    const schoolData = {\n      id: schoolId,\n      school: {\n        email: email.value.toLowerCase(),\n        contact: contact.value,\n        ownerName: owner.value,\n        ownerContact: ownerContact.value,\n        town: town.value,\n        street: street.value,\n        address: address.value,\n        currentPackage: school.currentPackage,\n        startsOn: school.startsOn,\n        endsOn: school.endsOn,\n        studentCount: school.studentCount,\n      },\n    };\n\n    console.log(\"schoolData\", schoolData);\n    editSchool(schoolData, () => updateSchool(schoolData),\n      () => setLoading(false),\n      () => setEditing(false),\n      () => forceUpdate());\n  };\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Typography variant=\"h5\" className={`${classes.title}`}>\n            <b>Lynx Admin</b>\n          </Typography>\n\n          <Typography variant=\"h5\"></Typography>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            PERSONAL INFORMATION\n          </Typography>\n          <form className={classes.form} noValidate>\n            <Form onSubmit={handleSubmit}>\n              <Row>\n                <Col md=\"6\">\n                  <FormGroup>\n                    <Label for=\"name\">School Name</Label>\n                    <Input\n                      name=\"name\"\n                      id=\"name\"\n                      disabled\n                      value={name.value}\n                    />\n                  </FormGroup>\n                </Col>\n                <Col md=\"6\">\n                  <FormGroup>\n                    <Label for=\"registeration\">Registeration Number</Label>\n                    <Input\n                      name=\"registeration\"\n                      id=\"registeration\"\n                      disabled\n                      value={regNo.value}\n                    />\n                  </FormGroup>\n                </Col>\n                <Col md=\"6\">\n                  <FormGroup>\n                    <Label for=\"email\">Email</Label>\n                    <Input\n                      type=\"email\"\n                      name=\"email\"\n                      id=\"email\"\n                      disabled={!editing}\n                      value={email.value}\n                      onChange={handleEmailChange}\n                      placeholder=\"Enter Email\"\n                      required\n                    />\n                  </FormGroup>\n                </Col>\n                <Col md=\"6\">\n                  <FormGroup>\n                    <Label for=\"password\">Password</Label>\n                    <Input\n                      type=\"password\"\n                      name=\"password\"\n                      id=\"password\"\n                      disabled\n                      value={password.value}\n                    />\n                  </FormGroup>\n                </Col>\n                <Col md=\"6\">\n                  <FormGroup>\n                    <Label for=\"owner\">Owner</Label>\n                    <Input\n                      name=\"owner\"\n                      id=\"owner\"\n                      disabled={!editing}\n                      placeholder=\"Enter Owner\"\n                      value={owner.value}\n                      onChange={handleOwnerChange}\n                      required\n                    />\n                  </FormGroup>\n                </Col>\n                <Col md=\"6\">\n                  <FormGroup>\n                    <Label for=\"ownerContact\">Owner's Contact Number</Label>\n                    {/* <Input\n                          name=\"ownerContact\"\n                          id=\"ownerContact\"\n                          disabled={!editing}\n                          placeholder=\"Enter Owner's Contact Number\"\n                          value={ownerContact.value}\n                          onChange={handleOwnerContactChange}\n                          type=\"number\"\n                        /> */}\n                    <PhoneInput\n                      inputProps={{\n                        name: \"ownerContact\",\n                        required: true\n                      }}\n                      id=\"ownerContact\"\n                      country={\"om\"}\n                      disabled={!editing}\n                      placeholder=\"Enter Owner's Contact Number\"\n                      value={ownerContact.value}\n                      onChange={handleOwnerContactChange}\n                      required\n                    />\n                  </FormGroup>\n                </Col>\n                <Col md=\"6\">\n                  <FormGroup>\n                    <Label for=\"contact\">Contact Number</Label>\n                    {/* <Input\n                          name=\"contact\"\n                          id=\"contact\"\n                          disabled={!editing}\n                          placeholder=\"Enter Contact Number\"\n                          value={contact.value}\n                          onChange={handleContactChange}\n                          type=\"number\"\n                        /> */}\n                    <PhoneInput\n                      inputProps={{\n                        name: \"contact\",\n                        required: true\n                      }}\n                      id=\"contact\"\n                      country={\"om\"}\n                      disabled={!editing}\n                      placeholder=\"Enter Contact Number\"\n                      value={contact.value}\n                      onChange={handleContactChange}\n                    />\n                  </FormGroup>\n                </Col>\n                <Col md=\"6\">\n                  <FormGroup>\n                    <Label for=\"street\">Street</Label>\n                    <Input\n                      name=\"street\"\n                      id=\"street\"\n                      disabled={!editing}\n                      placeholder=\"Enter Street\"\n                      value={street.value}\n                      onChange={handleStreetChange}\n                      required\n                    />\n                  </FormGroup>\n                </Col>\n                <Col md=\"6\">\n                  <FormGroup>\n                    <Label for=\"town\">Town</Label>\n                    <Input\n                      name=\"town\"\n                      id=\"town\"\n                      disabled={!editing}\n                      placeholder=\"Enter Town\"\n                      value={town.value}\n                      onChange={handleTownChange}\n                      required\n                    />\n                  </FormGroup>\n                </Col>\n                <Col md=\"6\">\n                  <FormGroup>\n                    <Label for=\"address\">City</Label>\n                    <Input\n                      name=\"address\"\n                      id=\"address\"\n                      disabled={!editing}\n                      placeholder=\"Enter City\"\n                      value={address.value}\n                      onChange={handleAddressChange}\n                      required\n                    />\n                  </FormGroup>\n                </Col>\n              </Row>\n              {editing ? (\n                <div>\n                  <Button\n                    color=\"secondary\"\n                    className=\"mr-2 mt-1\"\n                    onClick={() => {\n                      setEditing(false);\n                      forceUpdate()\n                    }}\n                    disabled={loading}\n                  >\n                    Cancel\n                  </Button>\n                  <Button color=\"primary\" className=\"mt-1\" disabled={loading}>\n                    Submit\n                  </Button>\n                </div>\n              ) : null}\n            </Form>\n\n\n\n            <Box mt={5}>\n              {/* <Copyright /> */}\n            </Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\nconst mapStateToProps = (state) => {\n  return {\n    // open: state.layoutReducer.snackbarState,\n    // message: state.layoutReducer.snackbarMessage,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // toggleAuth: (data) => dispatch(toggleAuthActionCreator(data)),\n    // showAlert: (message) => dispatch(onSnackbar(message)),\n    signUpDataEmail: (emailData) => dispatch({ type: \"SIGNUPEMAILDATA\", payload: emailData }),\n    signupEmail: (SIGNUPEMAIL_DATA, navigate, stopLoader) => dispatch(signupEmail(SIGNUPEMAIL_DATA, navigate, stopLoader))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PersonalInformation);\n","// import React, { Fragment, useState } from \"react\";\n// import {\n//   Col,\n//   Row,\n//   Button,\n//   Form,\n//   FormGroup,\n//   Label,\n//   Input,\n//   FormFeedback,\n//   Spinner,\n// } from \"reactstrap\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// // Layout\n// import { authActions } from \"../../../store/actions\";\n// import * as utils from \"../../../common/utils\";\n// const axios = require(\"axios\");\n\n// function VerifyCodeBoxed(props) {\n//   const dispatch = useDispatch();\n//   const [state, setState] = useState({ code: \"\" });\n//   const [stateLoader, setStateLoader] = useState(false);\n//   const [stateLoader1, setStateLoader1] = useState(false);\n//   const [stateSendCode, setStateSendCode] = useState(false);\n//   const [stateResendCode, setStateResendCode] = useState({\n//     disabled: true,\n//   });\n//   const [stateIsCodeValid, setStateIsCodeValid] = useState(true);\n//   const [stateIsFormValid, setStateIsFormValid] = useState(false);\n//   const token = useSelector((state) => state.auth.token);\n\n//   // state for timer\n//   let [stateTimer, setStateTimer] = useState({\n//     seconds: 59,\n//     timerInterval: 0,\n//     timerStart: false,\n//   });\n\n//   function _onChange(event) {\n//     const { value } = event.target;\n//     setState({ code: value });\n//     if (state.code.length > 3) {\n//       setStateIsFormValid(true);\n//     } else {\n//       setStateIsFormValid(false);\n//     }\n//   }\n\n//   function _onBlur(event) {\n//     const { value } = event.target;\n//     let codeValid = utils.isVerifyCodeValid(value);\n//     setStateIsCodeValid(Boolean(codeValid));\n//   }\n\n//   function countDown() {\n//     setStateTimer((prevState) => ({\n//       ...prevState,\n//       timerStart: true,\n//       seconds: --stateTimer.seconds,\n//     }));\n\n//     if (stateTimer.seconds === 0) {\n//       resetTimerState();\n//     }\n//   }\n//   // clear timer interval when time over\n//   function resetTimerState() {\n//     setStateTimer((prevState) => ({\n//       ...prevState,\n//       seconds: 59,\n//       timerStart: false,\n//       timerInterval: clearInterval(prevState.timerInterval),\n//     }));\n//     setStateResendCode((prevState) => ({ ...prevState, disabled: false }));\n//   }\n\n//   async function onVerifyCode() {\n//     try {\n//       setStateLoader(true);\n//       const { code } = state;\n//       resetTimerState();\n//       const config = {\n//         headers: { Authorization: `Bearer ${token}` },\n//       };\n//       const result = await axios.post(\n//         \"http://localhost:4000admin/verifyCode\",\n//         { code: code },\n//         config\n//       );\n//       setStateLoader(false);\n//       //console.log(\"users\", result);\n//       setState({ code: \"\" });\n//       props.history.push({\n//         pathname: \"/pages/reset-password\",\n//         state: routerState,\n//       });\n//     } catch (error) {\n//       //console.log(\"check error\", error.message);\n//       setStateLoader(false);\n//       utils._toast(error.message, \"error\");\n//       setState({ code: \"\" });\n//     }\n//   }\n\n//   const routerState = props.location.state;\n//   return (\n//     <Fragment>\n//       <div className=\"h-100 bg-plum-plate bg-animation\">\n//         <div className=\"d-flex h-100 justify-content-center align-items-center\">\n//           <Col md=\"6\" className=\"mx-auto app-login-box\">\n//             <div className=\"modal-dialog w-100\">\n//               <div className=\"modal-content\">\n//                 <div className=\"modal-header\">\n//                   <div className=\"h5 modal-title\">VerifyCode</div>\n\n//                   {stateTimer.timerStart && (\n//                     <p>{`00 : ${\n//                       stateTimer.seconds < 10\n//                         ? `0${stateTimer.seconds}`\n//                         : stateTimer.seconds\n//                     }`}</p>\n//                   )}\n//                 </div>\n//                 <div className=\"modal-body\">\n//                   <div>\n//                     <Form>\n//                       <Row form>\n//                         <Col md={12}>\n//                           <FormGroup>\n//                             <Label for=\"exampleCode\">Code</Label>\n//                             <Input\n//                               type=\"number\"\n//                               name=\"code\"\n//                               id=\"exampleCode\"\n//                               placeholder=\"Code here...\"\n//                               onChange={_onChange}\n//                               value={state.code}\n//                               onBlur={_onBlur}\n//                               invalid={!stateIsCodeValid}\n//                             />\n//                             {!stateIsCodeValid && (\n//                               <FormFeedback>\n//                                 Code length min 5 and max 6 digit.\n//                               </FormFeedback>\n//                             )}\n//                           </FormGroup>\n//                         </Col>\n//                       </Row>\n//                     </Form>\n//                   </div>\n//                 </div>\n//                 <div className=\"modal-footer clearfix\">\n//                   <div className=\"float-right\">\n//                     <Button\n//                       color=\"primary\"\n//                       disabled={!stateIsFormValid}\n//                       size=\"lg\"\n//                       onClick={onVerifyCode}\n//                     >\n//                       {stateLoader ? (\n//                         <div style={{ width: \"70px\" }}>\n//                           <Spinner\n//                             style={{ width: \"20px\", height: \"20px\" }}\n//                             color=\"light\"\n//                           />\n//                         </div>\n//                       ) : (\n//                         \"Verify Code\"\n//                       )}\n//                     </Button>\n//                   </div>\n//                 </div>\n//               </div>\n//             </div>\n//           </Col>\n//         </div>\n//       </div>\n//     </Fragment>\n//   );\n// }\n\n// export default VerifyCodeBoxed;\nimport React, { useState } from \"react\";\nimport {\n  Spinner,\n  FormFeedback,\n  Col,\n  Form,\n  Row,\n  Label,\n  Input,\n  FormGroup,\n} from \"reactstrap\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport * as utils from \"../../../common/utils\";\nimport { useSelector } from \"react-redux\";\nimport Art_Img from \"../../../assets/img/login-bg.jpg\";\nconst axios = require(\"axios\");\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" to=\"\">\n        Lynx Admin\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n  },\n  image: {\n    backgroundImage: `url(${Art_Img})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.type === \"dark\"\n        ? theme.palette.grey[900]\n        : theme.palette.grey[50],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(20, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  title: {\n    marginBottom: 40,\n    flexGrow: 1,\n    fontFamily: \"Dancing Script\",\n    cursor: \"pointer\",\n  },\n}));\n\nexport default function VerifyCodeBoxed(props) {\n  const classes = useStyles();\n  const [state, setState] = useState({ code: \"\" });\n  const [stateLoader, setStateLoader] = useState(false);\n  const [stateIsCodeValid, setStateIsCodeValid] = useState(true);\n  const [stateIsFormValid, setStateIsFormValid] = useState(false);\n  const token = useSelector((state) => state.auth.token);\n\n  function _onBlur(event) {\n    const { value } = event.target;\n    let codeValid = utils.isVerifyCodeValid(value);\n    setStateIsCodeValid(Boolean(codeValid));\n  }\n\n  function _onChange(event) {\n    const { value } = event.target;\n    setState({ code: value });\n    if (state.code.length > 3) {\n      setStateIsFormValid(true);\n    } else {\n      setStateIsFormValid(false);\n    }\n  }\n\n  async function onVerifyCode() {\n    try {\n      setStateLoader(true);\n      const { code } = state;\n      const config = {\n        headers: { Authorization: `Bearer ${token}` },\n      };\n      const result = await axios.post(\n        process.env.REACT_APP_SERVER_URL + \"/admin/verifyCode\",\n        // \"http://localhost:4000\" + \"/admin/verifyCode\",\n\n        { code: code },\n        config\n      );\n      setStateLoader(false);\n      //console.log(\"users\", result);\n      setState({ code: \"\" });\n      props.history.push({\n        pathname: \"/pages/reset-password\",\n      });\n    } catch (error) {\n      if (error.response) {\n        utils._toast(error.response.data.responseMessage, \"error\");\n      } else {\n        //console.log(\"toasdt\", error);\n        // utils._toast(\"Netwrok Error\", \"error\");\n      }\n      setStateLoader(false);\n      setState({ code: \"\" });\n    }\n  }\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Typography variant=\"h5\" className={`${classes.title}`}>\n            <b>Lynx Admin Admin</b>\n          </Typography>\n          <Typography component=\"h1\" variant=\"h5\">\n            Admin Panel\n          </Typography>\n          <form className={classes.form} noValidate>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              label=\"Code\"\n              helperText={\n                stateIsCodeValid ? \"\" : \"Code length min 5 and max 6 digit.\"\n              }\n              type=\"number\"\n              name=\"code\"\n              placeholder=\"code here...\"\n              value={state.code}\n              onChange={_onChange}\n              onBlur={_onBlur}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={!stateIsFormValid}\n              className={classes.submit}\n              onClick={onVerifyCode}\n            >\n              {stateLoader ? (\n                <div style={{ width: \"130px\" }}>\n                  <Spinner\n                    style={{ width: \"20px\", height: \"20px\" }}\n                    color=\"light\"\n                  />\n                </div>\n              ) : (\n                \"Verify Code\"\n              )}\n            </Button>\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\n","// import React, { Fragment, useState } from \"react\";\n// import {\n//   Col,\n//   Row,\n//   Button,\n//   Form,\n//   FormGroup,\n//   Label,\n//   Input,\n//   FormFeedback,\n//   Spinner\n// } from \"reactstrap\";\n// import { useDispatch } from \"react-redux\";\n// // Layout\n// import { authActions } from \"../../../store/actions\";\n// import * as utils from \"../../../common/utils\";\n\n// function ForgotPasswordBoxed(props) {\n//   const dispatch = useDispatch();\n//   const [stateLoader, setStateLoader] = useState(false);\n//   const [state, setState] = useState({ password: \"\", passwordRepeat: \"\" });\n//   const [stateIsPasswordValid, setStateIsPasswordValid] = useState(true);\n//   const [stateIsPasswordRepeatValid, setStateIsPasswordRepeatValid] = useState(\n//     true\n//   );\n//   const [stateIsFormValid, setStateIsFormValid] = useState(false);\n\n//   function _onChange(event) {\n//     const { name, value } = event.target;\n//     setState(prevState => ({ ...prevState, [name]: value }));\n//   }\n\n//   function _onBlur(event) {\n//     const { name, value } = event.target;\n//     if (name == \"password\") {\n//       let passwordValid = utils.isPasswordValid(value);\n//       setStateIsPasswordValid(passwordValid);\n//       setStateIsFormValid(\n//         passwordValid &&\n//           stateIsPasswordRepeatValid &&\n//           Boolean(state.password) &&\n//           Boolean(state.passwordRepeat)\n//       );\n//     }\n//     if (name === \"passwordRepeat\") {\n//       let isPasswordRepeatValid = utils.isPasswordRepeatValid(\n//         value,\n//         state.password\n//       );\n//       setStateIsPasswordRepeatValid(isPasswordRepeatValid);\n//       setStateIsFormValid(\n//         stateIsPasswordValid &&\n//           isPasswordRepeatValid &&\n//           Boolean(state.password) &&\n//           Boolean(state.passwordRepeat)\n//       );\n//     }\n//   }\n\n//   async function onResetPassword() {\n//     try {\n//       setStateLoader(true);\n//       const result = await dispatch(\n//         authActions.resetPassword({\n//           body: { password: state.password }\n//         })\n//       );\n//       if (result) {\n//         setStateLoader(false);\n//         props.history.push({\n//           pathname: \"/pages/login\"\n//         });\n//       } else {\n//         setStateLoader(false);\n//         utils._toast(\"Something went wrong in forgot password!\", \"error\");\n//       }\n//     } catch (error) {\n//       setStateLoader(false);\n//       utils._toast(\"Something went wrong in forgot password!\", \"error\");\n//     }\n//   }\n\n//   const routerState = props.location.state;\n//   return (\n//     <Fragment>\n//       <div className=\"h-100 bg-plum-plate bg-animation\">\n//         <div className=\"d-flex h-100 justify-content-center align-items-center\">\n//           <Col md=\"6\" className=\"mx-auto app-login-box\">\n//             <div className=\"modal-dialog w-100\">\n//               <div className=\"modal-content\">\n//                 <div className=\"modal-header\">\n//                   <div className=\"h5 modal-title\">\n//                     Reset your Password?\n//                   </div>\n//                 </div>\n//                 <div className=\"modal-body\">\n//                   <div>\n//                     <Form>\n//                       <Row form>\n//                         <Col md={12}>\n//                           <FormGroup>\n//                             <Label for=\"examplePassword\">New Password</Label>\n//                             <Input\n//                               type=\"password\"\n//                               name=\"password\"\n//                               id=\"examplePassword\"\n//                               placeholder=\"New Password here...\"\n//                               value={state.password}\n//                               onChange={_onChange}\n//                               onBlur={_onBlur}\n//                               invalid={!stateIsPasswordValid}\n//                             />\n//                             {!stateIsPasswordValid && (\n//                               <FormFeedback>\n//                                 {utils.Constants.passwordError}\n//                               </FormFeedback>\n//                             )}\n//                           </FormGroup>\n//                           <FormGroup>\n//                             <Label for=\"examplePasswordRepeat\">\n//                               Re-Enter New Password\n//                             </Label>\n//                             <Input\n//                               type=\"password\"\n//                               name=\"passwordRepeat\"\n//                               id=\"examplePasswordRepeat\"\n//                               placeholder=\"Re-Enter New Password here...\"\n//                               value={state.passwordRepeat}\n//                               onChange={_onChange}\n//                               onBlur={_onBlur}\n//                               invalid={!stateIsPasswordRepeatValid}\n//                             />\n//                             {!stateIsPasswordRepeatValid && (\n//                               <FormFeedback>\n//                                 Re-Enter Password must be same as above...\n//                               </FormFeedback>\n//                             )}\n//                           </FormGroup>\n//                         </Col>\n//                       </Row>\n//                     </Form>\n//                   </div>\n//                 </div>\n//                 <div className=\"modal-footer clearfix\">\n//                   <div className=\"float-right\">\n//                     <Button\n//                       color=\"primary\"\n//                       disabled={!stateIsFormValid}\n//                       size=\"lg\"\n//                       onClick={onResetPassword}\n//                     >\n//                       {stateLoader ? (\n//                         <div style={{ width: \"130px\" }}>\n//                           <Spinner\n//                             style={{ width: \"20px\", height: \"20px\" }}\n//                             color=\"light\"\n//                           />\n//                         </div>\n//                       ) : (\n//                         \"Reset Password\"\n//                       )}\n//                     </Button>\n//                   </div>\n//                 </div>\n//               </div>\n//             </div>\n//           </Col>\n//         </div>\n//       </div>\n//     </Fragment>\n//   );\n// }\n\nimport React, { useState } from \"react\";\nimport {\n  Spinner,\n  FormFeedback,\n  Col,\n  Form,\n  Row,\n  Label,\n  Input,\n  FormGroup,\n} from \"reactstrap\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport * as utils from \"../../../common/utils\";\nimport { useSelector } from \"react-redux\";\nimport Art_Img from \"../../../assets/img/login-bg.jpg\";\nconst axios = require(\"axios\");\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" to=\"\">\n        Lynx Admin\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n  },\n  image: {\n    backgroundImage: `url(${Art_Img})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.type === \"dark\"\n        ? theme.palette.grey[900]\n        : theme.palette.grey[50],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(20, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  title: {\n    marginBottom: 40,\n    flexGrow: 1,\n    fontFamily: \"Dancing Script\",\n    cursor: \"pointer\",\n  },\n}));\n\nexport default function VerifyCodeBoxed(props) {\n  const classes = useStyles();\n  const [state, setState] = useState({ password: \"\", confirmPassword: \"\" });\n  const [stateLoader, setStateLoader] = useState(false);\n  const [match, setStateMatch] = useState(false);\n  const [validation, setStateValid] = useState(false);\n  const token = useSelector((state) => state.auth.token);\n\n  function _onChange(event) {\n    const { value, name } = event.target;\n    setState((prevState) => ({ ...prevState, [name]: value }));\n  }\n\n  async function onSubmit() {\n    try {\n      const { confirmPassword, password } = state;\n      let passwordValid = utils.isPasswordValid(password);\n      if (passwordValid == false || passwordValid == null) {\n        //console.log(\"bot valids\");\n        setStateValid(true);\n        return;\n      }\n      setStateValid(false);\n      //console.log(\"check it\", passwordValid);\n      if (confirmPassword != password) {\n        setStateMatch(true);\n        return;\n      }\n      setStateMatch(false);\n      const config = {\n        headers: { Authorization: `Bearer ${token}` },\n      };\n      setStateLoader(true);\n      const result = await axios.post(\n        process.env.REACT_APP_SERVER_URL + \"/admin/resetPassword\",\n        // \"http://localhost:4000\" + \"/admin/resetPassword\",\n\n        { password: password },\n        config\n      );\n      setStateLoader(false);\n      utils._toast(\"password reset successfully\", \"success\");\n      props.history.push({\n        pathname: \"/pages/login\",\n      });\n    } catch (error) {\n      setState({ password: \"\", confirmPassword: \"\" });\n      if (error.response) {\n        utils._toast(error.response.data.responseMessage, \"error\");\n      } else {\n        //console.log(\"toasdt\", error);\n        // utils._toast(\"Netwrok Error\", \"error\");\n      }\n      setStateLoader(false);\n      setState({ code: \"\" });\n    }\n  }\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Typography variant=\"h5\" className={`${classes.title}`}>\n            <b>Lynx Admin admin</b>\n          </Typography>\n          <Typography component=\"h1\" variant=\"h5\">\n            Admin Panel\n          </Typography>\n          <form className={classes.form} noValidate>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              label=\"Password\"\n              helperText={utils.Constants.passwordError}\n              type=\"password\"\n              error={validation}\n              name=\"password\"\n              placeholder=\"password here...\"\n              value={state.password}\n              onChange={_onChange}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              label=\"Confirm Password\"\n              type=\"password\"\n              name=\"confirmPassword\"\n              error={match}\n              helperText={match && \"Confirm Password Not match\"}\n              placeholder=\"password here...\"\n              value={state.confirmPassword}\n              onChange={_onChange}\n            />\n            <Button\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={onSubmit}\n            >\n              {stateLoader ? (\n                <div style={{ width: \"130px\" }}>\n                  <Spinner\n                    style={{ width: \"20px\", height: \"20px\" }}\n                    color=\"light\"\n                  />\n                </div>\n              ) : (\n                \"Reset Password\"\n              )}\n            </Button>\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Spinner, FormFeedback } from \"reactstrap\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { connect, useDispatch } from \"react-redux\";\nimport * as utils from \"../../../common/utils\";\nimport { authActions } from \"../../../store/actions\";\nimport Art_Img from \"../../../assets/img/login-bg.jpg\";\nimport { signupEmail } from \"../../../store/actions/authAction\"\n\n\n// function Copyright() {\n//   return (\n//     <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n//       {\"Copyright © \"}\n//       <Link color=\"inherit\" href=\"https://material-ui.com/\">\n//         AfricanArt.International dddddddddddddddddddddddddddddddddd\n//       </Link>{\" \"}\n//       {new Date().getFullYear()}\n//       {\".\"}\n//     </Typography>\n//   );\n// }\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n  },\n  image: {\n    backgroundImage: `url(${Art_Img})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.type === \"dark\"\n        ? theme.palette.grey[900]\n        : theme.palette.grey[50],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(15, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  title: {\n    marginBottom: 40,\n    flexGrow: 1,\n    fontFamily: \"Dancing Script\",\n    cursor: \"pointer\",\n  },\n}));\nfunction ForgetPasswordEmail(props) {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const [state, setState] = useState({ email: \"\" });\n  const [stateIsEmailValid, setStateIsEmailValid] = useState(true);\n  const [stateIsFormValid, setStateIsFormValid] = useState(false);\n  const [stateLoader, setStateLoader] = useState(false);\n  const [loading, setLoading] = useState(false)\n\n  function _onChange(event) {\n    const { value } = event.target;\n    setState({ email: value });\n  }\n  function _onBlur(event) {\n    const { value } = event.target;\n    let emailValid = utils.isEmailValid(value);\n    setStateIsEmailValid(Boolean(emailValid));\n    setStateIsFormValid(Boolean(emailValid));\n  }\n\n  function onSignIn() {\n    props.history.push({\n      pathname: \"/pages/login\",\n    });\n  }\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setStateLoader(true);\n\n    const FORGETPASSWORD_EMAIL_DATA = {\n      email: state.email,\n      status:\"Forgot\"\n    };\n    props.signUpDataEmail(FORGETPASSWORD_EMAIL_DATA)\n    console.log(\"FIGOT PASSWORD EMAIL DATA\", FORGETPASSWORD_EMAIL_DATA)\n\n    props.signupEmail(FORGETPASSWORD_EMAIL_DATA, () => {\n      props.history.push({\n        pathname: \"/pages/forget-password-OTP\",\n\n      });\n    }, () => setStateLoader(false));\n  };\n  async function onForgotPassword() {\n    // try {\n    //   setStateLoader(true);\n    //   const result = await dispatch(authActions.forgotPassword(state));\n    //   setState({ email: \"\" });\n    //   if (result) {\n    //     props.history.push({\n    //       pathname: \"/pages/verify-code-boxed\",\n    //       state: result,\n    //     });\n    //   }\n    // } catch (error) {\n    //   if (error.response) {\n    //     utils._toast(error.response.data.responseMessage, \"error\");\n    //   } else {\n    //     utils._toast(\"Netwrok Error\", \"error\");\n    //   }\n    //   setStateLoader(false);\n    //   utils._toast(error.message, \"error\");\n    //   setState({ email: \"\" });\n    // }\n  }\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Typography variant=\"h5\" className={`${classes.title}`}>\n            <b>Lynx Admin</b>\n          </Typography>\n          <Typography component=\"h1\" variant=\"h5\">\n            Forgot your Password?\n          </Typography>\n          <form className={classes.form} noValidate>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              error={!stateIsEmailValid}\n              fullWidth\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              id=\"exampleEmail\"\n              placeholder=\"Email here...\"\n              value={state.email}\n              helperText={stateIsEmailValid ? \"\" : utils.Constants.emailError}\n              onChange={_onChange}\n              onBlur={_onBlur}\n              invalid={!stateIsEmailValid}\n              valid={state.email ? stateIsEmailValid : false}\n            />\n            <Button\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n                 disabled={stateLoader  || !state.email}\n              onClick={handleSubmit} >\n              {stateLoader ? (\n                <div style={{ width: \"130px\" }}>\n                  <Spinner\n                    style={{ width: \"20px\", height: \"20px\" }}\n                    color=\"light\"\n                  />\n                </div>\n              ) : (\n                  \"Forget Password\"\n                )}\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link\n                  style={{ cursor: \"pointer\" }}\n                  variant=\"body2\"\n                  onClick={onSignIn}\n                >\n                  Sign in existing account\n                </Link>\n              </Grid>\n            </Grid>\n            {/* <Box mt={5}>\n              <Copyright />\n            </Box> */}\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\nconst mapStateToProps = (state) => {\n  return {\n    // open: state.layoutReducer.snackbarState,\n    // message: state.layoutReducer.snackbarMessage,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // toggleAuth: (data) => dispatch(toggleAuthActionCreator(data)),\n    // showAlert: (message) => dispatch(onSnackbar(message)),\n    signUpDataEmail: (emailData) => dispatch({ type: \"SIGNUPEMAILDATA\", payload: emailData }),\n    signupEmail: (FORGETPASSWORD_EMAIL_DATA, navigate, stopLoader) => dispatch(signupEmail(FORGETPASSWORD_EMAIL_DATA, navigate, stopLoader))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ForgetPasswordEmail);\n","import React, { useState } from \"react\";\nimport { Spinner, FormFeedback } from \"reactstrap\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { connect, useDispatch } from \"react-redux\";\nimport * as utils from \"../../../common/utils\";\nimport { useSelector } from \"react-redux\";\nimport { authActions } from \"../../../store/actions\";\nimport Art_Img from \"../../../assets/img/login-bg.jpg\";\nimport { signupOTP } from \"../../../store/actions/authAction\";\n\n// import SignupEmailBoxed from \"../SignUpEmail\";\n\n// function Copyright() {\n//   return (\n//     <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n//       {\"Copyright © \"}\n//       <Link color=\"inherit\" href=\"https://material-ui.com/\">\n//         AfricanArt.International\n//       </Link>{\" \"}\n//       {new Date().getFullYear()}\n//       {\".\"}\n//     </Typography>\n//   );\n// }\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n  },\n  image: {\n    backgroundImage: `url(${Art_Img})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.type === \"dark\"\n        ? theme.palette.grey[900]\n        : theme.palette.grey[50],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  title: {\n    flexGrow: 1,\n    fontFamily: \"Dancing Script\",\n    cursor: \"pointer\",\n  },\n}));\n function OnboardOTPBoxed(props) {\n  const user = useSelector((state) => state);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [stateLoader, setStateLoader] = useState(false);\n  const [state, setState] = useState({OTPpin: \"\" });\n  // const [stateIsEmailValid, setStateIsEmailValid] = useState(true);\n  const [stateIsOTPpinValid, setStateIsOTPpinValid] = useState(true);\n  const [stateIsFormValid, setStateIsFormValid] = useState(false);\n  const [loading, setLoading] = useState(false)\n  console.log(\"SIGN UP OTPP PROPS\",props.signupEmail.email)\n  const loggedemail=props.signupEmail.email\n\n  const _onChange = (event) => {\n    const { name, value } = event.target;\n    console.log(\"CONSOLE\",name,value)\n    setState((prevState) => ({ ...prevState, [name]: value }));\n  };\n\n  function onBlurHandler(event) {\n    const { name, value } = event.target;\n    validateField(name, value);\n  }\n\n  // function countryToFlag(isoCode) {\n  //   return typeof String.fromCodePoint !== \"undefined\"\n  //     ? isoCode\n  //         .toUpperCase()\n  //         .replace(/./g, (char) =>\n  //           String.fromCodePoint(char.charCodeAt(0) + 127397)\n  //         )\n  //     : isoCode;\n  // }\n\n  function validateField(fieldName, value) {\n    switch (fieldName) {\n      // case \"email\":\n      //   let emailValid = state.email === \"\" ? false : stateIsEmailValid;\n      //   emailValid = utils.isEmailValid(value);\n      //   setStateIsEmailValid(emailValid);\n      //   validateForm();\n      //   break;\n\n      case \"OTPpin\":\n        let passwordValid = utils.isOTPpinValid(value);\n        setStateIsOTPpinValid(passwordValid);\n        validateForm();\n        break;\n\n      default:\n        break;\n    }\n  }\n  function validateForm() {\n    let emailValid = false,\n      OTPpin = false;\n    // emailValid = utils.isEmailValid(state.email);\n    OTPpin = utils.isOTPpinValid(state.OTPpin);\n    setStateIsFormValid(OTPpin);\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setStateLoader(true);\n\n    const SIGNUPOTP_DATA = {\n     email:loggedemail,\n    OTPcode:state.OTPpin\n    };\n    \n    console.log(\"SIGN UP OTP INDEX\",SIGNUPOTP_DATA)\n\n    props.signupOTP(SIGNUPOTP_DATA, () => {\n      props.history.push({\n        pathname: \"/pages/forget-new-password-boxed\",\n        // state: { email:loggedemail }\n      });\n    }, () => setStateLoader(false));\n  };\n\n\n  const signupOTP = async () => {\n  \n    // console.log(\"SIGNUP_OTP_DATA\", state)\n    // props.history.push({\n    //       pathname: \"/pages/signup-password-boxed\",\n    //     });\n    // try {\n    //   setStateLoader(true);\n    //   const result = await dispatch(authActions.signupOTP(state));\n    //   props.history.push({\n    //     pathname: \"/dashboards\",\n    //   });\n    // } catch (error) {\n    //   if (error.response) {\n    //     utils._toast(error.response.data.responseMessage, \"error\");\n    //   } else {\n    //     utils._toast(\"Netwrok Error\", \"error\");\n    //   }\n    //   setStateLoader(false);\n    //   setState({OTPpin: \"\" });\n    // }\n  };\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Typography variant=\"h5\" className={`${classes.title}`}>\n            <b>Lynx Admin</b>\n          </Typography>\n\n          <Typography variant=\"h5\"></Typography>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            FORGET PASSWORD OTP\n          </Typography>\n          <form className={classes.form} noValidate>\n            {/* <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              error={!stateIsEmailValid}\n              fullWidth\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              id=\"exampleEmail\"\n              placeholder=\"Email here...\"\n              value={state.email}\n              helperText={stateIsEmailValid ? \"\" : utils.Constants.emailError}\n              onChange={_onChange}\n              onBlur={onBlurHandler}\n              invalid={!stateIsEmailValid}\n              valid={state.email ? stateIsEmailValid : false}\n            /> */}\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              error={!stateIsOTPpinValid}\n              label=\"OTP Code\"\n              type=\"text\"\n              helperText={\n                stateIsOTPpinValid ? \"\" : utils.Constants.OTPpinError\n              }\n              id=\"password\"\n              autoComplete=\"current-password\"\n              type=\"text\"\n              name=\"OTPpin\"\n              placeholder=\"Enter 6 digits OTP\"\n              value={state.OTPpin}\n              onChange={_onChange}\n              onBlur={onBlurHandler}\n              invalid={!stateIsOTPpinValid}\n              valid={state.OTPpin ? stateIsOTPpinValid : false}\n            />\n\n            <Button\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={stateLoader  || state.OTPpin.length!== 6}\n              className={classes.submit}\n              onClick={handleSubmit}\n            >\n              {stateLoader ? (\n                <div style={{ width: \"130px\" }}>\n                  <Spinner\n                    style={{ width: \"20px\", height: \"20px\" }}\n                    color=\"light\"\n                  />\n                </div>\n              ) : (\n                \"Confirm\"\n              )}\n            </Button>\n            {/* <Grid container>\n              <Grid item xs>\n                <Link\n                  style={{ cursor: \"pointer\" }}\n                  variant=\"body2\"\n                  onClick={onClickForgotPassword}\n                >\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item xs>\n                <Link\n                  style={{ cursor: \"pointer\" }}\n                  variant=\"body2\"\n                  onClick={onSignupPassword}\n                >\n                  Already Verified?\n                </Link>\n              </Grid>\n            </Grid> */}\n            {/* <Box mt={5}>\n              <Copyright />\n            </Box> */}\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\nconst mapStateToProps = (state) => {\n  console.log(\"SIGN UP OTP STATE\",state)\n  return {\n    signupEmail:state.auth.signupEmailData\n    // open: state.layoutReducer.snackbarState,\n    // message: state.layoutReducer.snackbarMessage,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // toggleAuth: (data) => dispatch(toggleAuthActionCreator(data)),\n    // showAlert: (message) => dispatch(onSnackbar(message)),\n    signupOTP: (SIGNUPOTP_DATA,navigate,stopLoader) => dispatch(signupOTP(SIGNUPOTP_DATA,navigate,stopLoader))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OnboardOTPBoxed);\n","import React, { useState } from \"react\";\nimport { Spinner, FormFeedback } from \"reactstrap\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { connect, useDispatch } from \"react-redux\";\nimport * as utils from \"../../../common/utils\";\nimport { useSelector } from \"react-redux\";\nimport { authActions } from \"../../../store/actions\";\nimport Art_Img from \"../../../assets/img/login-bg.jpg\";\nimport { forgetNewPassword } from \"../../../store/actions/authAction\"\n\n// import SignupEmailBoxed from \"../SignUpEmail\";\n// function Copyright() {\n//   return (\n//     <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n//       {\"Copyright © \"}\n//       <Link color=\"inherit\" href=\"https://material-ui.com/\">\n//         AfricanArt.International\n//       </Link>{\" \"}\n//       {new Date().getFullYear()}\n//       {\".\"}\n//     </Typography>\n//   );\n// }\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n  },\n  image: {\n    backgroundImage: `url(${Art_Img})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.type === \"dark\"\n        ? theme.palette.grey[900]\n        : theme.palette.grey[50],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  title: {\n    flexGrow: 1,\n    fontFamily: \"Dancing Script\",\n    cursor: \"pointer\",\n  },\n}));\n\n function ForgetPasswordNewPassword(props) {\n  const user = useSelector((state) => state);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [stateLoader, setStateLoader] = useState(false);\n  const [state, setState] = useState({ password: \"\" });\n  const [stateIsEmailValid, setStateIsEmailValid] = useState(true);\n  const [stateIsPasswordValid, setStateIsPasswordValid] = useState(true);\n  const [stateIsFormValid, setStateIsFormValid] = useState(false);\n  const [loading, setLoading] = useState(false)  \n  const loggedemail=props.signupEmail.email\n  console.log(\"SIGN UP PASSWORD PROPS\",loggedemail)\n\n  const _onChange = (event) => {\n    const { name, value } = event.target;\n    setState((prevState) => ({ ...prevState, [name]: value }));\n  };\n\n  function onBlurHandler(event) {\n    const { name, value } = event.target;\n    validateField(name, value);\n  }\n\n  function countryToFlag(isoCode) {\n    return typeof String.fromCodePoint !== \"undefined\"\n      ? isoCode\n        .toUpperCase()\n        .replace(/./g, (char) =>\n          String.fromCodePoint(char.charCodeAt(0) + 127397)\n        )\n      : isoCode;\n  }\n\n  function validateField(fieldName, value) {\n    switch (fieldName) {\n      // case \"email\":\n      //   let emailValid = state.email === \"\" ? false : stateIsEmailValid;\n      //   emailValid = utils.isEmailValid(value);\n      //   setStateIsEmailValid(emailValid);\n      //   validateForm();\n      //   break;\n\n      case \"password\":\n        let passwordValid = utils.isPasswordValid(value);\n        setStateIsPasswordValid(passwordValid);\n        validateForm();\n        break;\n\n      default:\n        break;\n    }\n  }\n  function validateForm() {\n    let emailValid = false,\n      passwordValid = false;\n    // emailValid = utils.isEmailValid(state.email);\n    passwordValid = utils.isPasswordValid(state.password);\n    setStateIsFormValid(passwordValid);\n  }\n\n \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setStateLoader(true);\n\n    const FORGET_NEW_PASSWORD_DATA = {\n     email:loggedemail,\n     password:state.password\n    };\n    \n    console.log(\"FORGET NEW PASSWORD INDEX\",FORGET_NEW_PASSWORD_DATA)\n\n    props.forgetNewPassword(FORGET_NEW_PASSWORD_DATA, () => {\n      props.history.push({\n        pathname: \"/pages/login\",\n      });\n    }, () => setStateLoader(false));\n  };\n\n  // const onLogin = async () => {\n\n  //   // console.log(\"FORGET_NEW_PASSWORD_DATA\", state)\n  //   // try {\n  //   //   setStateLoader(true);\n  //   //   const result = await dispatch(authActions.signupPassword(state));\n  //   //   props.history.push({\n  //   //     pathname: \"/dashboards\",\n  //   //   });\n  //   // } catch (error) {\n  //   //   if (error.response) {\n  //   //     utils._toast(error.response.data.responseMessage, \"error\");\n  //   //   } else {\n  //   //     utils._toast(\"Netwrok Error\", \"error\");\n  //   //   }\n  //   //   setStateLoader(false);\n  //   //   setState({ password: \"\" });\n  //   // }\n  // };\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Typography variant=\"h5\" className={`${classes.title}`}>\n            <b>Lynx Admin</b>\n          </Typography>\n\n          <Typography variant=\"h5\"></Typography>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            SET YOUR PASSWORD\n          </Typography>\n          <form className={classes.form} noValidate>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              error={!stateIsPasswordValid}\n              label=\"Password\"\n              type=\"password\"\n              helperText={\n                stateIsPasswordValid ? \"\" : utils.Constants.passwordError\n              }\n              id=\"password\"\n              autoComplete=\"current-password\"\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password here...\"\n              value={state.password}\n              onChange={_onChange}\n              onBlur={onBlurHandler}\n              invalid={!stateIsPasswordValid}\n              valid={state.password ? stateIsPasswordValid : false}\n            />\n            <Button\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              disabled={stateLoader || state.password.length <= 7}\n              onClick={handleSubmit}\n            >\n              {stateLoader ? (\n                <div style={{ width: \"130px\" }}>\n                  <Spinner\n                    style={{ width: \"20px\", height: \"20px\" }}\n                    color=\"light\"\n                  />\n                </div>\n              ) : (\n                \"SET PASSWORD\"\n                )}\n            </Button>\n            {/* <Grid container>\n              <Grid item xs>\n                <Link\n                  style={{ cursor: \"pointer\" }}\n                  variant=\"body2\"\n                  onClick={onClickForgotPassword}\n                >\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item xs>\n                <Link\n                  style={{ cursor: \"pointer\" }}\n                  variant=\"body2\"\n                  onClick={onSignupPassword}\n                >\n                  Already Verified?\n                </Link>\n              </Grid>\n            </Grid> */}\n            <Box mt={5}>\n              {/* <Copyright /> */}\n            </Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\nconst mapStateToProps = (state) => {\n  console.log(\"forgetNewPassword UP PASSWORD STATE\",state.auth.signupEmailData)\n  return {\n    signupEmail:state.auth.signupEmailData\n    // open: state.layoutReducer.snackbarState,\n    // message: state.layoutReducer.snackbarMessage,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // toggleAuth: (data) => dispatch(toggleAuthActionCreator(data)),\n    // showAlert: (message) => dispatch(onSnackbar(message)),\n\n    forgetNewPassword: (FORGET_NEW_PASSWORD_DATA,navigate,stopLoader) => dispatch(forgetNewPassword(FORGET_NEW_PASSWORD_DATA,navigate,stopLoader))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ForgetPasswordNewPassword);\n","import React, { useState } from \"react\";\nimport { Spinner, FormFeedback } from \"reactstrap\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { connect, useDispatch } from \"react-redux\";\nimport * as utils from \"../../../common/utils\";\nimport { useSelector } from \"react-redux\";\nimport { authActions } from \"../../../store/actions\";\nimport Art_Img from \"../../../assets/img/login-bg.jpg\";\nimport { signupPassword } from \"../../../store/actions/authAction\"\nimport firebase from './../../../config/firebase';\n\n// import SignupEmailBoxed from \"../SignUpEmail\";\n// function Copyright() {\n//   return (\n//     <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n//       {\"Copyright © \"}\n//       <Link color=\"inherit\" href=\"https://material-ui.com/\">\n//         AfricanArt.International\n//       </Link>{\" \"}\n//       {new Date().getFullYear()}\n//       {\".\"}\n//     </Typography>\n//   );\n// }\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"calc(100vh - 16px)\",\n    width: \"100%\",\n    // marginTop:\"75px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  image: {\n    backgroundImage: `url(${Art_Img})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.type === \"dark\"\n        ? theme.palette.grey[900]\n        : theme.palette.grey[50],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    // margin: theme.spacing(8, 4),\n    margin: \"15px 12px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginBottom: \"-30px\",\n\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  title: {\n    flexGrow: 1,\n    fontFamily: \"Dancing Script\",\n    cursor: \"pointer\",\n  },\n}));\n\nfunction OnBoardPassword(props) {\n  const user = useSelector((state) => state);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [stateLoader, setStateLoader] = useState(false);\n  const [state, setState] = useState({ password: \"\" });\n  const [stateIsEmailValid, setStateIsEmailValid] = useState(true);\n  const [stateIsPasswordValid, setStateIsPasswordValid] = useState(true);\n  const [stateIsFormValid, setStateIsFormValid] = useState(false);\n  const [loading, setLoading] = useState(false)\n  const loggedemail = props.signupEmail.email\n  console.log(\"SIGN UP PASSWORD PROPS\", loggedemail)\n\n  const _onChange = (event) => {\n    const { name, value } = event.target;\n    setState((prevState) => ({ ...prevState, [name]: value }));\n  };\n\n  function onBlurHandler(event) {\n    const { name, value } = event.target;\n    validateField(name, value);\n  }\n\n  function countryToFlag(isoCode) {\n    return typeof String.fromCodePoint !== \"undefined\"\n      ? isoCode\n        .toUpperCase()\n        .replace(/./g, (char) =>\n          String.fromCodePoint(char.charCodeAt(0) + 127397)\n        )\n      : isoCode;\n  }\n\n  function validateField(fieldName, value) {\n    switch (fieldName) {\n      // case \"email\":\n      //   let emailValid = state.email === \"\" ? false : stateIsEmailValid;\n      //   emailValid = utils.isEmailValid(value);\n      //   setStateIsEmailValid(emailValid);\n      //   validateForm();\n      //   break;\n\n      case \"password\":\n        let passwordValid = utils.isPasswordValid(value);\n        setStateIsPasswordValid(passwordValid);\n        validateForm();\n        break;\n\n      default:\n        break;\n    }\n  }\n  function validateForm() {\n    let emailValid = false,\n      passwordValid = false;\n    // emailValid = utils.isEmailValid(state.email);\n    passwordValid = utils.isPasswordValid(state.password);\n    setStateIsFormValid(passwordValid);\n  }\n\n  // function onClickForgotPassword() {\n  //   props.history.push({\n  //     pathname: \"/pages/forgot-password-boxed\",\n  //   });\n  // }\n  // function onSignupPassword() {\n  //   props.history.push({\n  //     pathname: \"/pages/signup-email-boxed\",\n  //   });\n  // }\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setStateLoader(true);\n\n    const messaging = firebase.messaging()\n\n    Notification.requestPermission()\n      .then(permission => {\n        console.log(permission)\n        return messaging.getToken()\n      })\n      .then(token => {\n        const FORGET_NEW_PASSWORD_DATA = {\n          email: loggedemail,\n          password: state.password,\n          FCMtoken: token\n        };\n\n        console.log(\"FORGET NEW PASSWORD INDEX\", FORGET_NEW_PASSWORD_DATA)\n\n        props.signupPassword(FORGET_NEW_PASSWORD_DATA, () => {\n          props.history.push({\n            pathname: \"/pages/login\",\n          });\n        }, () => setStateLoader(false));\n\n      })\n\n  };\n\n  const onLogin = async () => {\n\n    // console.log(\"FORGET_NEW_PASSWORD_DATA\", state)\n    // try {\n    //   setStateLoader(true);\n    //   const result = await dispatch(authActions.signupPassword(state));\n    //   props.history.push({\n    //     pathname: \"/dashboards\",\n    //   });\n    // } catch (error) {\n    //   if (error.response) {\n    //     utils._toast(error.response.data.responseMessage, \"error\");\n    //   } else {\n    //     utils._toast(\"Netwrok Error\", \"error\");\n    //   }\n    //   setStateLoader(false);\n    //   setState({ password: \"\" });\n    // }\n  };\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      {/* <Grid item xs={false} sm={4} md={7} className={classes.image} /> */}\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Typography variant=\"h5\" className={`${classes.title}`}>\n            <b>Lynx Admin</b>\n          </Typography>\n\n          <Typography variant=\"h5\"></Typography>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            SET YOUR PASSWORD\n          </Typography>\n          <form className={classes.form} noValidate>\n            {/* <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              error={!stateIsEmailValid}\n              fullWidth\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              id=\"exampleEmail\"\n              placeholder=\"Email here...\"\n              value={state.email}\n              helperText={stateIsEmailValid ? \"\" : utils.Constants.emailError}\n              onChange={_onChange}\n              onBlur={onBlurHandler}\n              invalid={!stateIsEmailValid}\n              valid={state.email ? stateIsEmailValid : false}\n            /> */}\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              error={!stateIsPasswordValid}\n              label=\"Password\"\n              type=\"password\"\n              helperText={\n                stateIsPasswordValid ? \"\" : utils.Constants.passwordError\n              }\n              id=\"password\"\n              autoComplete=\"current-password\"\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password here...\"\n              value={state.password}\n              onChange={_onChange}\n              onBlur={onBlurHandler}\n              invalid={!stateIsPasswordValid}\n              valid={state.password ? stateIsPasswordValid : false}\n            />\n            <Button\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={handleSubmit}\n              disabled={stateLoader || state.password.length <= 7}\n            >\n              {stateLoader ? (\n                <div style={{ width: \"130px\" }}>\n                  <Spinner\n                    style={{ width: \"20px\", height: \"20px\" }}\n                    color=\"light\"\n                  />\n                </div>\n              ) : (\n                \"SET PASSWORD\"\n              )}\n            </Button>\n            {/* <Grid container>\n              <Grid item xs>\n                <Link\n                  style={{ cursor: \"pointer\" }}\n                  variant=\"body2\"\n                  onClick={onClickForgotPassword}\n                >\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item xs>\n                <Link\n                  style={{ cursor: \"pointer\" }}\n                  variant=\"body2\"\n                  onClick={onSignupPassword}\n                >\n                  Already Verified?\n                </Link>\n              </Grid>\n            </Grid> */}\n            <Box mt={5}>\n              {/* <Copyright /> */}\n            </Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\nconst mapStateToProps = (state) => {\n  console.log(\"forgetNewPassword UP PASSWORD STATE\", state.auth.signupEmailData)\n  return {\n    signupEmail: state.auth.signupEmailData\n    // open: state.layoutReducer.snackbarState,\n    // message: state.layoutReducer.snackbarMessage,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // toggleAuth: (data) => dispatch(toggleAuthActionCreator(data)),\n    // showAlert: (message) => dispatch(onSnackbar(message)),\n\n    signupPassword: (FORGET_NEW_PASSWORD_DATA, navigate, stopLoader) => dispatch(signupPassword(FORGET_NEW_PASSWORD_DATA, navigate, stopLoader))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OnBoardPassword);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport OnBoardEmail from '../OnBoardEmail';\nimport OnBoardOTPboxed from '../OnBoardOTPboxed';\nimport OnBoardPersonal from '../OnBoardPersonal';\nimport OnBoardPassword from '../OnBoardPassword';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nfunction getSteps() {\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad',\"assdsddas\"];\n}\n\n\nfunction getStepContent(step, handleNext, props) {\n  switch (step) {\n    case 0:\n      return <div> <OnBoardEmail handleNext={handleNext} history={props.history} activeStep /> </div>;\n    case 1:\n      return <OnBoardOTPboxed handleNext={handleNext} activeStep />;\n\n    case 2:\n      return <OnBoardPersonal handleNext={handleNext} history={props.history} activeStep />;\n    case 3:\n      return <OnBoardPassword handleNext={handleNext} history={props.history} activeStep />;\n\n    default:\n      return 'Unknown step';\n  }\n}\n\nexport default function HorizontalLinearStepper(props) {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n  const steps = getSteps();\n\n  const isStepOptional = (step) => {\n    return step === 1;\n  };\n\n  const isStepSkipped = (step) => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    let newSkipped = skipped;\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped((prevSkipped) => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep} style={{display:\"none\"}}>\n        {steps.map((label, index) => {\n          const stepProps = {};\n          const labelProps = {};\n          if (isStepOptional(index)) {\n            labelProps.optional = <Typography variant=\"caption\">Optional</Typography>;\n          }\n          if (isStepSkipped(index)) {\n            stepProps.completed = false;\n          }\n          // return (\n          //   <div>\n\n          //   </div>\n          //   // <Step key={label} {...stepProps}>\n          //   //   {/* <StepLabel {...labelProps}>{label}</StepLabel> */}\n          //   // </Step>\n          // );\n        })}\n      </Stepper>\n      <div>\n        {activeStep === steps.length ? (\n          <div>\n            {/* <Typography className={classes.instructions}>\n              All steps completed - you&apos;re finished\n            </Typography>\n            <Button onClick={handleReset} className={classes.button}>\n              Reset\n            </Button> */}\n          </div>\n        ) : (\n            <div>\n              <Typography className={classes.instructions}>{getStepContent(activeStep, handleNext, props)}</Typography>\n              {/* <div>\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\n                Back\n              </Button>\n              {isStepOptional(activeStep) && (\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleSkip}\n                  className={classes.button}\n                >\n                  Skip\n                </Button>\n              )}\n\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleNext}\n                className={classes.button}\n              >\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n              </Button>\n            </div> */}\n            </div>\n          )}\n      </div>\n    </div>\n  );\n}\n","import React, { Fragment } from \"react\";\nimport { Route } from \"react-router-dom\";\n\nimport LoginBoxed from \"./LoginBoxed/\";\n\nimport RegisterBoxed from \"./RegisterBoxed/\";\n\nimport ForgotPasswordBoxed from \"./ForgotPasswordBoxed/\";\nimport OnboardEmailBoxed from \"./OnBoardEmail\"\nimport OnBoardOTPboxed from \"./OnBoardOTPboxed\"\nimport OnBoardPersonal from \"./OnBoardPersonal\"\nimport PersonalInformation from \"./PersonalInformation\"\nimport VerifyCode from \"./VerifyCode\";\nimport ResetPassword from \"./ResetPassword\";\nimport ForgetPasswordEmail from \"./ForgetPasswordEmail\";\nimport ForgetPasswordOTP from \"./ForgetPasswordOTP\";\nimport ForgetPasswordNewPassword from \"./ForgetPasswordNewPassword\";\nimport App from \"./StepperForm/main\";\nimport OnBoardPassword from \"./OnBoardPassword\";\n// import main from \"./Stepform/main\";\n\nconst UserPages = ({ match }) => (\n  < Fragment >\n    <div className=\"app-container\">\n      <Route path={`${match.url}/login`} component={LoginBoxed} />\n      <Route path={`${match.url}/register`} component={RegisterBoxed} />\n      <Route path={`${match.url}/forgot-password`} component={ForgotPasswordBoxed} />\n      <Route path={`${match.url}/verify-code`} component={VerifyCode} />\n      <Route path={`${match.url}/reset-password`} component={ResetPassword} />\n      <Route path={`${match.url}/onboard-email-boxed`} component={OnboardEmailBoxed} />\n      <Route path={`${match.url}/onboard-OTP-boxed`} component={OnBoardOTPboxed} />\n      <Route path={`${match.url}/onboard-personal-boxed`} component={OnBoardPersonal} />\n      <Route path={`${match.url}/onboard-password-boxed`} component={OnBoardPassword} />\n      {/* <Route path={`${match.url}/onboard-personal-info-boxed`} component={PersonalInformation} /> */}\n      <Route path={`${match.url}/forget-password-email`} component={ForgetPasswordEmail} />\n      <Route path={`${match.url}/forget-password-OTP`} component={ForgetPasswordOTP} />\n      <Route path={`${match.url}/forget-new-password-boxed`} component={ForgetPasswordNewPassword} />\n      <Route path={`${match.url}/wizard`} component={App}/>\n\n    </div>\n  </Fragment >\n);\n\nexport default UserPages;\n","module.exports = __webpack_public_path__ + \"static/media/login-bg.319e795c.jpg\";"],"sourceRoot":""}